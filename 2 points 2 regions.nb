(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    150491,       2968]
NotebookOptionsPosition[    145251,       2880]
NotebookOutlinePosition[    145721,       2898]
CellTagsIndexPosition[    145678,       2895]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<velocity tools\>\"", 
      ",", "\"\<init.nb\>\""}], "}"}], "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8299980715276704`*^9, 3.8299980715296264`*^9}, {
   3.82999822632197*^9, 3.8299982338078775`*^9}, {3.8299996756509085`*^9, 
   3.8299997331512084`*^9}, {3.8436512526709843`*^9, 3.843651255171874*^9}, {
   3.843651833071619*^9, 3.843651834530229*^9}, {3.8436533763396044`*^9, 
   3.8436533851254377`*^9}, 3.8436534165851917`*^9, {3.843653704608134*^9, 
   3.8436537079052534`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"652af6e2-203c-4b3d-89df-dfac0066658f"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.853663914324391*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"834269a7-297f-4f1e-97a9-e893e87807e3"],

Cell[CellGroupData[{

Cell["Numeric Algorithm V1 (Via Primal Variables)", "Subsubsection",
 CellChangeTimes->{{3.8258719086288357`*^9, 3.8258719152614603`*^9}, {
  3.8258789604721537`*^9, 3.825878978972817*^9}, {3.8492996205110006`*^9, 
  3.8492996268783054`*^9}, {3.849299775022135*^9, 3.849299777532977*^9}, {
  3.8536621096450644`*^9, 3.853662112355006*^9}, {3.853662334923978*^9, 
  3.8536623460956326`*^9}},ExpressionUUID->"1fe5aae2-160b-4aeb-b068-\
486448326ff8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnXlcTN//+DXNTEVRdrJGvfEWUijvopG0WGrKWooalJCQypYIhQiVhEoL
QgoVHgghaw8Jbb/2Hu2Pts9M85iZ79z76DdbyzT3zlJTwnn+8X68deee5XVe
57zO65xzX2ey426rbZgBAwbsk2f9x8rBk7B3r8MBa2XWP9a47tvu5Lp1i5mr
+1anrXt1HWVZf/SSGTDgFuv37P9vBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAIA+hkamMLvzXguZAku7LH8uQMoAAADw20AtTj5kZuT9ntH2h+af
4aT5m29SfmWhegpc88zP48rXlm68CpUlentG5dClWyAgZX56R8oA8YCr0qMD
T53wZXHC79LDbOEtCDd8vRf1tIgm+cPuJiod6KVP/B3NFhkQlpisdvG9GuHt
ciqdIfq1vwrKz4cXD7tstrez27z/Zj4k+AOo7P7hzXZ2dvakvadufen7AoqN
hDVp6Ft/A27ISrx00MFEe2VALkLZ+piWKKLmnrcdfYGRvm82MZL8C0skADXV
Q3vSXPdn4hlIxs+gzTviKrvdps1p3hu9nklZJ4CUu9ArUgaICVRweiFuAFZt
S3K9qBZojFihIDuWlII4PRP6sLuJSgG47oHjZGUdj9Qa1gBLK3/hb6Emr2R1
szuz0z8d6sudU7ADBsiqbX8uIB7G5wOaOJkBMvhF54p/vaUSRT+uCbOlJv3g
XBxunm92z3Nn0CWcuULV7+Ki78aF+p9/WMCaZFOjrbi2CK7/cCfiZuy1Q+Zq
lv3LFjG+BtuYrL/4RZzxASoMWbMutKRHciWnbF+291XPHHAgZVFIQ8qA7sF4
t1cDi9XoPAdFpflHSvy78vYf0vOePs9lojwUQnff6xaNUZZKuLlHv7fnx/h+
ynBZQFH/N1tSpaXsY2L4xdO+Pj5HWfj4hr6sFPgNa/KnP3bkcFmM8orrFfzT
v+YHjnN1ddWwMsrr71H7qsyIiFORfl6ThqumclKw+HBtsqtrZL0Eb0BFIVY2
16vhVma2n6G2RzqdZ4vgihubHCKq4FbaUyf1fmaLJKDlibMu6VFPzQgz69hi
s0s9MGhAymLQYykDugnzxzFtnKwqKUXS0Y+WG7VR0/RimaRLM919r7vUXzOT
l1HU8/3aXkG4Ns7n3BdxDp3AMKeUMJMpUFohj9h/ZjCQdBmGIJRfd+sIjJhQ
vkdsNyUQnb0Drt1Jfv6CTeqrL6WCqxxQ4RnCSg8PbTkZvJb3105FgsuurDQ4
EOnJ8o2VN9zrzQ0YoYhdkT6qCZNKZQi0J6+JWYqBpAFMdkuLsvjIatJFS+i5
V1aOUTAJq5OgwJRY6ymOSexaMz8f0NLzzSZzbRH55lodd/ZGF+O9u3TXm9G7
CfcJxP8Apd+0JSOc5viNmo4Pez6Lg7J9/9M/mdNtYyQgZWo/kzLq8PQ7SRnQ
PeCSQEM5zNC1cc0sTS1Mu3PF38t567m3tFbKj5sHN1pYud0uYLcJXP818eq5
o3tIziEZjFao9PGJDVpDZTFDF2zyCnxaXtf5YXvKTVl3/Q8cPHHm7LW4q/vX
etyvgbu8x59oG5T8Z5EhwWEhfvv3nHpYyBmThRSMDVQU72lHOvemEVFfodyA
xUoyMtjRhp6JhZ2HeLjx+70D5hqqE9dG1sKtzT8eXdhmMEl1smM8tZWcmxLs
ZWOgYej9KGbH4qkqeLzyVJODjytYOQp5xKbpc5iLDcnrmPeeTaYLDTb4vaji
PmDm39xD2htwJSzQYz1h7cWf3LEbqnod5OW622XzCh2NmWYHksq76j9c+/HG
nmUaqqoTjPanFFR/DbWdM23prstpFWJ3FMbPYOulLvHF4i3XnSFYXsu7YTkU
I6u6+UFT29+ZmUcXr7pS/PlQ9+1k31akN2vCAq5+4edgu/PkxcAj6/XmrQvm
TCbp+Ulnd1vpqukeSErytpo3SRmvpGEd+r1NsVt+RLnabNp92Puwm5PT8uko
q/qIaoKkJdSMy3ZzhmGwEwmOzjtOJXfeUqVm39lFUFNVnW55NDGLvVfKKEn1
Jc7U23qnoCV1h8bCU3ms9xkfPA1s4xp5togabzvZMrIGbmWku8+WiveJ3k0o
hS+uH3VcMn2x98Nop/ljFAYbnmcVCKXfMCo/xgW4rdadsiqkSpQ1oj9z1jAP
q237Zw80jv58u4ZJiPBt6t9Qyq1ow1MPpNwDMfOk3DMJACQErg1foYgZZH6t
hq2zjcUv9s/FKZpeyX8fevBE9D2P+Ti8UTBPCeifDmjiBlvcYK8iMqmN6V6z
5DR2p9aTW9huTueHbGg/r23QNvRKrWM9a4xZO0xh+v4PjK7vtQq8R/kavFZT
e0t8GcQetM/qK/7j+pIiqmCtLYl2IzC42UcyUBxlZuEt0kwlzIABGEWNVUcS
8jvmp1Dh6YWslEKqOSkxPnnOwCkQY6isDEtfec7FsWYmLmEv82urMiIcpitg
hhhdKhD2qBXKCzEZPdP9HdfpJH88Mm/goDkH2P9siLEaZXaVU0so5yzJ+xOn
8hm+BNMz2exSw3W31oyQVVlxrVywx0GFYctH4FRt79aQ0w8Tt92vlmB1BC4N
W73yzE8xVxA4djK8ifpq11SsjOKSi7ydD8pjp/+2JpEZGT2zk31Ykd6tCS2F
NBY/6zBH3RojVykqW99s5JSx5oqJAmao9tZrn+qZUNWtdWOxI+wS2coAV92x
VZu5+1Uz5/2mlC2TZBEtPpKaoGkJ5/yNHLKPT04mjccONr/KM1pwWbAlMZT9
Elye6GZFCkxMCj/qfTO/pSJ1r7aqRdCPRsqHk0vmELYdDfBcobFgz+MKfjlD
BcmXTvv7oeN/OuQJ/zYZejeh1hY+2zcLJzty4e7oD5/undh3+nlVDlq/YTRW
5N5xnCSLXxIkyhax+rKBxo5UOv/fuqVxcNkFwqQtj0XNLXss5S4VkKaUyYJS
rkUdnnoo5W6KmSdlcX4KkBrkuxuGYeQM2o4w0Z5uGzeIcORqQOj7Js56v9xE
lxe81m2IJg5RIPBW4+Gyi4SBYxyT2own/8OaRMepYy0jedar/qrpQNUtT2ii
3oNKoqzHDV54KovnFtESNg7FaexLF1UwFozawqI6odaAknv/iIWGEkZGBjNk
jvPdYu6P4ZJzBh0Wn8k2BByLz6Lpurlcp+3/5gebx8ri9PyFPaKnukzC/+Pe
/hkAXBtNVJEdYhFZy7YFA5X1PJ+wjyvA1ZmZbDeNkmg3Zrzp/jNn2ZzxtlLH
ygxZfQtp5g8VXTEfhptMMF2+i+94ZXNmxIG9xy8Fnzzo90hgeYBTgvIgy3U3
xN7p5dlJ1szljP5AGey0fe9YIoYrw60I3plMrng620mR2YtdERb08rTLu9Yf
fYE8zEpYEUlrIir7ronfO+x28S1nSYkct1YZP/8Ed3GS9shhFE5t12uOAsDV
IUvxLLUogNiLuzMV5nh/a9PQ+jATxFV9JDVB1RJhFr+V+f24jhxe24eTJVR8
gWgbU9cubyalsRnh2AyT3EhmMuiC+xSsmcaP1JTkJHSSU15lC5y8Ru9BlBur
5LBcH4CNkH7T2jYrF22L6C93qmsd/tplFEDVOKHKS729epj5tQbhGfZrKedD
XaWMLmaOnHokZSEdW0jH4kpZeH4A6cI2pLIsfcnitiDjvfs0eXXjfTd+sEec
qlCTQSNs43lHNKgPN4/C6xz/ye0cjTFWysrEmMZWhIfNj7dOkpt9uM3jJifY
jVaxvtkk4j24Pn6jKm4cKaXtSAhcGrgYj1twMldEwSSAmn9vt+5QltUfqO39
ia2Cwix++HI5nPaxH2263cT+pGCCs5BHUJ6fLg43v9PWFFx6fjFedvLOV61w
w7O9sxUxssqa6/2flXL6HMcMzDv48md2BzklDcgnGKGCYGMV7ARSUlPH35qS
t84gBLA/P6N99Jo/7/B7QY+Vke4+V13XeJkAJit3xBQK5sKzkyybdGf9KAxm
xJqbtYwfJ5YSr7JPv3Wxk2JkL2ZFWFCKPz3xMx8x0v4BcioSVkSymojOHgF6
ZXrshTPnApx0FdsHXFpSJ4vfsVsP5fvr4eRXRLRXGXUfX1BN0LVEqMVnzRei
icOw40hJzawfBliR7jeLWzGpgd6DWqJWyeHmsOdebIT0G3YfZTXlf+LYIlqy
4/j/ThcIyBRR40QoLy3BdgzhYrnIKvZfKT+nd5GyEDFznvZQyigdW2jH4kpZ
ksoCeggjfd8/nY7pQ9m+Ojj8nEOfOfOx5ri1QweviuANKIw01ykdE0TaY5Lq
wCWX2pagOz+Eq68tV5LjTDLZwJWRlsPavX8h79VHWQ7BTtj+vG0uCNeErxyC
n8M5diWsYCKAil6m5neekTa/cZ+Fl5GdtOMlXSKLz1LPobgZnkIeQbmnFuDa
xileZhEr5Njy5VSo4XPYNr3ROBnsiEU+b5tbGa93qeGnuL4W6yMF2mdfixnj
5PDT3V42t8nn+nIV1nyIu92ZtltjzMYEgfUBKM9/pWOi2KdsOuwkewdyBk5G
Qe/ole2GTo8p7eJps5NiZS9WRdpgJaI+Gs3kSlgRSWoiTvZdIH8JWq+/yvcN
y6Gj3bdREWXxGe/3T8PijS/XtI2mwk7udVETdC0RbvFZhUlz08ANNg4u/Om/
ZtfTHp60ghk0GhUdGh3h/Cp6D+pi8dH7DbvWHbYIyr9sNV1Nw2DN9p0sXLZt
NJ83wyygLX36c2c1HZ/vAit9CBonUnlbYonKy66IM8L0Vyl/YghYfFQxc552
WHyhYkaTMnrHRu9YXCl3R1CA7tHlmD57xV1B0SSU+zUT/ZnT+IGEC6VcHWNm
HZ2LV93ymNtujA8e0+U7tIzvIS1h4zD2Wjx3iGp8dURvGE7zENfhF/Iey5f5
Fydnfr3N+4fyzhoojbeLZy/sCSuYyDr+9F1ue6u20485XyPKjnd61mHxeScC
OGVAsfhw+QWCvCopWdgj2tNt42VxC061R1ZhT6vlRtjca4arn6d85CwqNH4J
sZ6MG2gaVvN/xQEGeKya09OODkLPio16h3DyvOX9EeL2xNJ3XnPk5f7dl8ax
WrRk0pjB1rfami7QcOAMz48CdoGZ6WNmH1crnqxYfd3PcNVV7mImVBK8VElG
Bq+kd4y3AsT80slOImYvMgOkirQh3ORKVhFJaiJW9nxF+eqtxWpv7jYvLV60
xWfrrxxmxLrbbbsSaBYfQU0gVC3hWnwhdgkqCDRUxE2zWrvG822nNVXJ92Ja
GZ8u2FtarELHgugQLLDSi96Dutgi9H7D+Ucn75P8cvc0/FCzUN5uNlx2fZd3
Gk/pWaPZ/Olub7p0AUSNE9V34KpgY1UxZ38oUpZsn4iDVKXcIiBldDFz/r+z
jy9EzMhSFtaxUTsWT8riigfQY9hH4+RkBq6I4FnZ+hsWg5XMr7X7u7Pktbw/
f48LSijkbjAOXXu77GNsXAYVyjkxT17d7WVOSmxqBdTlISWWOAg7ZRd7JknN
uXsu+NBKlVGb7uc+jkgqZAh5j1wcaKgwyCKKO7Ax8sIspv935HWjqILRv0ds
X781NAN9ck25Za2sank1t63jQYWBBEXcFJfnHK0k31o9BKtqe5eVNqPsqTdh
lCyecIkzs2D3JOw/e3m9mPHj5MKRBqe5AzvqI+aPs4uVcTP2veVabSj/7KKR
eie+0lmZnrN1ecytG7sCw4kx9aw/XjIagsFNXHXqcXZ1fWXWwxN2m4N+CM6e
m197mDrEsbsi5e1+TXm5mXvZJ8AoURYDR21+xOtIzeHLFRCjGMH1yTuW2oTn
ijXusCZD/y5o27hpbX7kOA6rvDK87cwy47XrFKzMIGIMW3KI2XPqHLXFiLD+
zNtGweSRK9KeuXCTK1FFJKkJWvaoNaHd26CMUSIE5jOhprzEHbNw2H/c06k0
GrOV9sB+OMvic70ouDrECM8di+HSMHMVjIKmS3Ile/+q4fmOf7BY9V0vu4YX
R1ATdC2Ba0ON8bjZRzKZcH1JSRPSXIjywmUKFje787Zr9/ZiugV6DyJHrpDD
zTzwua1YqP2G86/OtghueESahBu9OpbXlOSS4vZZICXediIxms/BRNE4UX2H
8d5d04C3dC1MoXn5Ckq5W/tE3UN8KQsVM/+qvhAxI0hZeMdG7dc8KfP+kR21
c8PW0C8gMFpv0fQt7pDZeKyMDO6fdWcSv7NNSILdyEFLQ3jxSugvtk/AjVno
ePYF29Cyv+FTGDzb+mBUZgt34UhWZe7GwDTOORX+h3Dl7Y2T5ORVtY1W2Z98
Wll8frGc0gzi8RSWOyH0vVbyu1PG0/VdY56m3L7g4XLkfkH7Jit6weCq8JXK
GEWjIPRIDgzWwDZtoaGhuf0ebz9/b+dl6qqzbEO/to31lLfH9EdgcYNHT12w
8dIjP6Phk/VtjsTn0Dg9SXbMPIs1m9y8vV2tllocflzZ9gUe+iO4JvUEUWuO
qcup4EvHndbYHH9exT19dM5kos46nxtJT+4HbiNuucGNP8QsurNDd7QcRmaA
jOyQ6Vb+r+u6jtuM4ifHzMerrrz4jX1OrCUnykYNK4Mda+QZn3l743CVNi+V
fUpsoLrg1JsrsdxYJyMjh1Oxz78U1NFQvGS4KfPeaaeFI2SxYwluF54UssvH
/HbcyvUpd2b0PfGcq+EY2QEDMEPmbjoV94WWgJA9O7OnTmytUjC7yu97olck
hzdbE+1ki1URiWvCOwslkD1aTVhzjxRXTSUMdrDqv0tcIhO8dRUwSlPMTqRm
pQZYsyqloOkQ/LK4/se9ffoqGMwQXddbmQ0wVPZgr4GqAm7wuJnzl9gdczFQ
VtWx3HXueRmf3iKrCZqWQAWhZsNlB03UW3PoQQnysVXGR08tfb+OaL7d3Yvp
FsjdBK5+H+lOGC0rIzdtw5nbH3gdB6XfcIXCt8MMs7+BwE10eCDQV+DKK+Yz
d7UvWgvRuAYk5e30XXHZRWMtD57Tj6oGHXSVctufJdgn6j6SSFmImLvu46OK
uYuURXdsNDHwSbm1LsZKBaNkdKlYyuIBiA+1prK+oxcw60rLm9saH26pyC9u
YCI/ZNFSnfszv4bb4LSa0mqqmO+xvzbJya0QcbMSf8HotcXlZGEv0CpKqzmf
NrVUZX9Izyis7+olwtSaosJqKvuDJwqZ2pYUb7XsO6WmILesma83C3nUlmdt
cVENtVOpOPFYIEpl/s/86pYupaXVFeWXNkoac5DdRZWMQ7lTb+Z3H23lFRHo
Z9mZ1Z9un97nuNbC3MREyIE3aWQPtdTlBjnsTJZ0T1O8AVLqFRGSvZCasBS1
qIrbkDC5vKCCLNbyOL2uKLewjsZ6pRFRbYSpCaKWMBvLSmrQJQZXR9isudxp
/6t7ezHdRHQ3EUCg37TybJGcWcfJeag4yHjisqA8wXOPNZFEXY8PonuS8L4D
V4at1O8UtkmUQgtImUffWXwJpYwkZgEpo4pZbCnzQBFDVym3Muqq6sDtOoBf
RtcTMeI96kOggvMENftEtuMKV4eZT7COqRE+U+qj7OmFdw97xSKc5hUB47Xr
1N4fICXJvrs16S/QMnxWku53Xo1G24vpFaTUTdi7zfLcg7YcmAXXt7nElCK2
CuX1PmOnJNEH5oX1HeYPv5U2UZ1CM4tQA0Ep8+hTiy9tKQsTs7hS5oLcrwWk
DAD8UuCay8Z4vl0wcR71LbSsK/bWruEpSZe2EF3i+jxENXL2zMIPHyokviSB
Wvbx9m6dQQo6u++kF/V9wHG+7Nv+2L2a/Hrgmtt26qrqOvpa080u8rtoaHsx
vVOMHnUTqCDSwWj9+U9k2vPtGnO83vNMET3rvOO+R51OcDKKcgo6rAlcn7R7
3fHPoq0sWt+By6K22IfkdiozihoIkXJbyfrC4veOlEWIWWwpo/VrQSkDAL8Q
qCItbJ/lPE3N2UakU9dTi5hiPfolQJSKvDwxF5X/vOwBSNAygjb8p7Nove+z
qi4NI9lWUA/oeTeBG9+c2bBIW9+StPtEYiHPEpHfHlmz805OOY+SnPSYPQ6n
PvPZ45Yvl3Z5p4gT9k1QeanfQt28k0RGmuWALmUevW/xe0nK4ohZfCkLIomU
AQAAANBNfvFWUI+A61KcNHAyA/jATkU4r9qSn5nTnYUiqPRblsCBwG7zi7ep
uovYYu4fUgYAAAAAGr94K+hvAXGfCAAAAACAvgXsxQAAAEC/glqcfMjMyPt9
+2Ja889w0vzNNyW/TkB02lJMGgAAAAAAgIS0RBE12+48YMNI3zebKI1rtQXT
lmbSAAAAAAAAhANVv4uLvhsX6n/+IftTGGq0Fdcqw/Uf7kTcjL12yFzNsrtm
GSVtaSQNAAAAAABAAqCiECub69VwKzPbz1DbI53Os8pwxY1NDhFVcCvtqZN6
N80ySto0KSQNAAAAAABAIiix1lMck3gXCWrp+WbzLD755lodzo3CjPfugkvv
cGXyvdciTbVA2mRO2vVCkwYAAAAAANAL0FN3aCw8xQ7fxfjgaWAb18iz+NR4
28mWkTVwKyPdfbaAI878dnL/FZHRLFDSbhKaNAAAAAAAgB5C+RlprznqX/vw
n01wa/OPC6uXebyoYZYnulmRAhOTwo9638xvqUjdq61qEfSjkfLh5JI5hG1H
AzxXaCzY87iCLyVBi4+UdiuMnHZFOn/SvzqEIAAAAAAAfxpQjv9CFT2/HLbb
/fGYa2jb3VtMSmMzQjB3JrmRzGTQGQLOPJKPL1naqEkDAAAAAADoOXB93Pqx
U11etNDfHdsfJVGEaqgsJcBzvzuHfY6GC0xduP/vvv/AlbeNPUv7r4JGpvxu
qxotZBGXSQPEADQ8AADooDfD37TD+Og5c6RF2L1jh+O5l21CxQm+3kG3Y876
xeaIe1U0yj6+QNqtUN3X2IOrd0QD+88Frnnm53Hla4v4b/SJUogAKkv09owS
WzsAgkje8H2FMAUDDQ+QFtTC5PPuW+03k5z3+IbF3TrreyOnV/KB6749ijjn
vctu1ZLN1ySINU0vfeLvaLbIgLDEZLWL79UIb5dT6b1/iWlvhr9pAy69YjZ8
pNb+x5zRB66NXbf4wCdGK1wVarEsIF+8IKhoJ/f402ZBpza/99IyvgTupGbD
+Bm0eUdcpYSy6AulEElzmvdGr2cNvdGMcENW4qWDDibaKwNy/9AYvN1r+L5C
qIL1YsMD/hroGaf+Gzpx9bVs1jySWf3yiL6y4sqIhl7Ki9LYkBtAkMdO3vlK
3LkqXPfAcbKyjkdqDWsEopW/8LdQk1eyuil6gs6gSzgr6M3wN6i0PCIZuL3m
CqPl7oYJa+Oo7LKnu2suPlMoVgroZ/U7p839aab3vGXA4reyb40NWbMuVIxr
ZH6JUoiEnLJ92d5XvbG0wGypST84F4eb55v9R1p8sRu+r5BMwXqv4QF/CbRk
x9G4idtftNmFlqStZkcz27a46HlPn+dKdb+L8WH/dNyoTQ/EXlJrjLJUws09
+r29FIzvpwyXBRQJ77NwbbKra6QkN3/3ZvgbIbkWX97rxxM3XHFxyURSCueb
+Z/HF8zY+06sJJjf/byuIq3Ud06b91Ng8bm0PHHWJT0SPXD+GqUQA2bWscVm
l3rHcDVcNZX7Uy2+uA3fV0isYL3Z8IC/AfKNVQoY5RXX2la5oKK42FfcG51p
uVEbNU0vlknTQEA/j+vghhBjGsV+o/6ambyMop7vV2rbX+DaOJ9zX/jmITCD
0fnf9NwrK8comITVSVAylBA1IsLfdBu4Nj06+Hr02a07I9sF3BxDnGB7n1OE
Lwe1dI//FDMtJpN/UoaUNveHUrL4cP1r3+UaQ5UnW4bk8GYrZTFbDXQJ22+X
i3q193IWP+nm+I2ajg+pon/YvZhIfQGU7fuf/skcoSM/k0oV+P4Cgjh/gZlM
pFeZ7G4kxOL3QPw9VTqptLzYDd9XSK5g4jQ8AIAKVBi0dAgGM9Ik8FunjgCV
Pj6xQWuoLGbogk1egU/bPgCH6789iAoPP+u2aWc46+eMktfhfvudN673eVKR
dT/A3c7ScvOxh0VCFtPh0kBDeYWlIXxGByqK97QjnXvTiNhxodyAxUoyMtjR
hp6JhTSBp1Wvg7xcd7tsXqGjMdPsQFI5qydQMy7bzRmGwU4kODrvOJXceceO
mn1nF0FNVXW65dHELPZ+GKMk1Zc4U2/rnYKWboW/6TbMnNDVc2YSdt0t7ui7
UEnwcpMzBaw/NMdt0HFL6+4hHaS0uQ+kY/FZAtLVstrhZDRBXvMQZ+pFfbPn
H5ycpsdbYUs3UF6w+djhcw6kCbRib+fcBfozZw3zsNq2f/5KpYBrP97Ys0xD
VXWC0f6UguqvobZzpi3ddTmtQuSITn++XcMkBHE7Gq5+4edgu/PkxcAj6/Xm
rQtmT5bp+Ulnd1vpqukeSErytpo3SRmvpGEd+r2tr7b8iHK12bT7sPdhNyen
5dNRVvV/XcNLp+W7NHwPpC8Z6Br285nECiak4QEAMWAWRFiPx8ngVC1Cf7Z3
SSa1Md1rlpzG7tR6cgvHUYBrXngv1SYGZZJbW+LWDtXgrjm3xNsMw8+yOXY6
8lVRTX70hvHYIeZXUU0KXBu+Qgmv65fH16NaEu1GYHCzj2SgbB8wC2+RZiph
BgzAKGqsOpKQ3zEzoWf4EkzPZLPfg+turRkhq7LiGnvCDxWcXoiTQ/bxycmk
8djB5ld5XQYuC7YkhrJfQglRIxD+hr+UUEHypdP+fuj4nw55ImILogPKW78t
XrEvH57atu+eVNdW2NCrM4KIqprb43PqezSiMX+cP3SNVTq4InjpyDW3qSzJ
XVuhgp+2+6VwyweVxTktnEe88JVjZrojuO7m3KUchacNNHakdp5P9VgpJMge
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
OyfjJroInOr646DeXq2I0/GVZpJwWYixIkZxyUXOWTT2nbyyAwkXiju1U3PE
Cjkc74x9K1wbaozHzT6SyYTrS0oayi8S8DhdP97pSpbTPBA7zf096skLcqz1
pJXXSjsSl2SKR4m3nUiM5v8GT5gai7qoiPHeXdPgdIFYUhIb6r31yrKjHZNF
3OgEAAAAfQrtR8RmraFYmQE8MKPtEnjDKdIVL4hp0HNjnYyMHE7FPv9SUEdD
c/fhpsx7p50WjpDFjiW4XXhSyOceUTP8jFadR97H57xcG7tu8YFPDJZLFmqx
LADx5D6U7auDU153t2+vv+174KqgJXj55eHSTbX+1vq5W5J4TU9/s1d3TXR7
6D968euI/YYjMDIKsxyDn+W1sJ38ULPhsoMm6q05GJMSs0d/KEZGSXtb2Nvy
+m93DhiNlpWRn7np2kfEK23g0lDTEXp+nQMgIU7xUIArr5jP3PWqy7QOXY1F
XFQEl1001vIQ41youMC1mY+uexBGycrgNNacjk35Jvb6FwAAAPQFUEtdVXVd
U3NDwR2H6YQ2w0tLELziBTUJZvWn26f3Oa61MDcxEXJyDx24qbaON+7WXzXt
fJCLTcvdDRPWckwCI91dc/GZQiST3xi+QgG/JKj7nxr+HjC/HJyJF3q/XreA
Guqb2iUHN9U3iNgdYTaWldRI7sS2pO5Ux+IJFzvH3EGY4qEv6sA1kURdD6Rv
MBHVGEmLOy4qgivDVup79+kNigAAANA/ID/fabb/HW8wRbripddLADf9eHjM
XFUWO9nqTNLPNhMEV1xcMpGUwh62mT+PL5ix9x2SU8Z4u0cdr7Hn7R/+QT71
vu1QvJ5//q8uR3eAqyNWKctgWCa4s3lHmOIJW9ShvN5n7JQkJLheZzUWelER
84ffSpuont3mAAAAAL8RtE8BllrTZhOI1kv/nbP5XoeLjHDFy68qY3MMcYLt
fY7F/3JQS7frSQAedVdNFQatutGE9OyPAco9tUBuDOn33COmxduoYGQGm19t
1zLkKZ7wRR24Pmn3uuOf+SWApsboFxXBZVFb7ENygYMPAAD+Hmgf/JfPmqox
d4mdb3KXWLmSXfHSi0AlwctNzrA/w26O26DjloZ8Oo/55ZCm3NSuJ7mli3SC
w/eAlvgNQ+UJF8p+S8eU+fXsKv31l76KOmshclGn5culXd4pne/uRVdjZC2m
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
+goBJWbvGNx8l89/fMRnjHMn4uaeEGGJUJ77MslR6w9Z6J14S4Gborb/Lb1s
2zbi+V69J4SI3xX++hvxKU/2jJeYvP1ed/YFlC5eR3FKeFBw3I/mXtZFzz63
dJ792wHu1RDC3lHNHa7xX6+A8A+0T34m+npb0dEjmvmjLUOAiA8AAIYNevbF
ZZJi+LFKS9cQNAkb9Eyc7mTwZh/rI/Ms3Jhgs253cL5wPov2/ti/y87ncHtc
uC7uoBIer4E4xodyr/rEMP8Tavh67+Q2m3D+rG8cqK8Pz8BNsx74rq7fBfL9
bTI4NTdRFglXBKyXwcisvcraYsa8k1dcmuBX2us7tYZslsBx9th3wvWB6/E4
5TNZdLixrKyp8ioBj1vuwdldyRgLS2PnOnxAjcpt9wynb7ld3lN4f7p47Y/3
TCOGD/AoqRD2jmrutA8OCzR41hMGDfnRLjnxieYJv8CJUgAA8OdDyQ4xVRmD
FfuLA2aicUx/b5Cl5t+z1NIyc7/38ktRAwUtIMMtWY+8LFeME8dOItj7JRdz
jXrImR5aW68gr+N31UJu/eCssv4aal4+KNdNDSe386ForqX9dYFrrq/FS24K
Fm2pjVG7Fu+P53x66ttjy7eH13VpmlqaFnJCcxxGTGqhuf+Lgg7mID9Q52/x
EdPUt5+MSIw4umoMRkxW9WDQu8rGbw9ctCaKi0nO33c7A/GmGrg8cOM4dY/e
iYmQu3jIwNU3decfSR1ot65Pe0czd7ji6noVRyE2kAoLXJ8Vd8eRMEFcDKe0
3ete4reBnzgEAAAA4YE6GmpqG1pam4oemM0jXOE+Fi/c7TL02k/3vY6b79DT
1dYWsHMPHbilvoHjThtvbey9kaunjizSkg3oEb+zOXizFH7tdREfmf7loH85
OR8/ySJRxMVCTY0t3ZqDWxqb+lgdoTdXlNX1f2zakXJ4NhZPuNo75w5yFw9l
UgeuCyUudxzUGUxB9o5i7nB10JZVJNFdgQgAAAA/m7aXh3VOvOd2pqK/T04Q
cEv2s3O6CuLYGQaX4nNauJx9XxGf9u7obLzS0Xd/+IF88pM9Y/DqnoU/W46B
ANeGbJUTw4w24tqMidzFQ53UaU87vt4yfhA5IrtBsHdkc6dne2zZHTa4ax8A
AADg50P55KOvMleZQDRc9+8i00e8Q2SR3yc3YPqK+J0NtzZKjdh6twX1gT8B
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
R6FSP+KeiMElkyBH6Et2RV9ml0RaTt0puZLGlC8ri2/+AlVn9QIaO5/j6V0n
cy7q9EJcd4+Q/v3sYpzEpmD2tj6oyFMdJ6l7pxldqSDiA0QG3PTaUVVGTHyy
RQK7UTdHGMjJESPYfUtalquqlKzW9ZLWokSPHSsI1hG5LKOFq/y1pGQ2BnHi
EyP+q+LwqwTvqqNnn1PF4VZeKu7/jiJy4SO75WMYUV9alfSJynYeS06+zsnt
Ia+sidZHxKfEm02auMyI9LhUVFsSmbQEb5Lo7f5bQjZLiU+1eknt7AjbKtEr
NEEFHstxuKW91qvh8itr8OIzDrP+tfjSSk7Eb45z3qRD3HPA2sbUcONGg33W
1geNiTqbjj+pQ/N7lATzKSu9eCIBQ0uqm2+h7WhguKusEJdj56/5XzzpEcfr
9mifrhjpaG/oZv3ymRNmLl/f8wdtXePrXFMzfdXGgFr55saRXWeRDsdRYvbI
E64K+nE3/Y34ov/qLGvHznHo2ckIV/pp4jHy5gncMgiO+OQHO0bh/nX+REc3
Z6bwPfETZembtaQguTmke1t4z2MCTQ6lbAHS8EGtTr/nd+myj+Vyma44iCax
ACn5gGvDiWOxky3iWxkq9DGweDLIbSjkCKJUd/SFm14cU5bBiMst2OX5opz/
tdB1liqgsSNE/F51MiO+ck/Eh/IuLu2J+IziV+Pxmr5d+0sQlAoiPmBQQKWv
XuT2+D9aJsMcsUrH3rN8TJKFgvTaa+xZNGZ3FyutvPuMq+uluynFPSOYlqht
cjIbbnBm8aFSX00p6VWX+jhbS47ePlKWGC5c84VKXqcU9vbRrW8dFuLFxKfb
vKbS0o4o4mfapiE0V0ERvyNCX26J6zcBe7phGoVCRodC5duYx+8EWLtq/3H6
ROOL+Pnuy7iXfztbGUNDrNJR1r92R3y4zM/Y4hFz4ZB8jyjNdgxw43NbE68C
NP1SX1opqrn+4A5pbeH6Ewyj0AbdLQkH/iH4ME+XUTKcly45/UHgkbW+x/iC
a2PQXvop2UN33HiTpwg1ddwjym24KUiCbvob8fv86v3/6ORY43FYeYue+E7/
RlLBSRB497oKGfHRzVmoiE/7cGIuFr/+Rnd/sFeYFWRyKGULkIaLti/Xd63a
6vaWMfymPNk9uq+IL0BKBChv7JVwI9f7F+d4bj/yXKiNvgLgjr7MoP856KD6
RJwYdtxq13c8/ghdZ+8ENHYRRXwUpYKIDxgU5Bgby+he03QdUYayDOtk7jKh
fXScJ9ll0nAZwxZxSy7w7aKmJh+YLKXpxznmRPnovGDEnMMv+wjlcLkvYZLh
PSFTntFz3Dbtier9MHOHNFZ8iuULKlTqo4HHKlo+76mR+v1e2PsOjo/dcJM/
4kMV8ee3zp2MGG+6KvjkZ6KvtxUdPaKZP+/UOa8TYAz3CJIKFgkdnbwRv5Py
/OAUcdwy9+6OEXM4ITFu9yPWf/dE/IYP79jbiXoiPnO/0YcM1HQe9OxzS+fZ
v+V2B813dKXlDcMrEA8F1N3ZNHrZRbYktDd2SvJ7YwRtaes74guqrbuUN3az
JyJ9AbjGf72CyVMBP+2hXxG/768+oI/edH/7WLza+Zyul20M2SIrtcKLt8fL
Y41oER/dnIWK+MxlOAnMuJ33u06G9XpMkMmhlC1Aml7Qv5JUGGaexAqLlMd9
R3xBUiIAFflqyuDmGuzY7vRu0AmTekdfuPZlYgazRLj5S4DhDJz0xiCeqTNU
nbUKaOx8jmcgER9VqSDiAwYDVOi5YizhStdxe7ghxmSKzBI3pnFCeReWSM62
f52XeC+lCupsDN0qi51s9ow9xd+eF+Mf+ZWZr+eT87+S810+s/f2pDgum619
OZN/izYtO9zl6MVHuaxQwlw92GwcVsppRtQfIYd2HQjMRO++t0cZyino38rv
au9QsS9BBjfT+mU787+vaY3C4KZtdU/KrW2s/v7sgrHpdWYzhOsD17MO/NPh
xrKylp6m3PLufkzut4sEw1DWu8DNH8MfZokk9xrTCWDnHOP4JVr2xRXjNbxY
7bQtdLMEjqMmFvRs7zVyuH+Oc7azQ4Xeq8erX/hKZb9e96x+N70jvmDaH++Z
xjt7Qs++uExSDD9WaekagiZhg56J052Mro1rlAQL+ZGGUWztwxW+mtL/OGUI
KL/viC+otu5S0CI+7YPDAg2vIs7/5IYdNjoQ+AVlzz9D35Ji2Dk9zo+aengG
duSOaARTGrKv3vHuxPxRyy5ks1erq0L1J0wzecLXl+WxRnrlVQIet9yjkN0G
OhhfFzuXuTaAas6dlKcmf+O6zgCwewxc+wfY1ZQH6Y7GSC2wTqhmJgRqemkz
B4udfeQ188oCASaHVja6NL2gPDKSw8gSfAvpUEtBrM1C5ipHOplCoaNKLEhK
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
RZFvpIQdg7WH7ExSDHCNNRLhsAL5xfl+TZ3g8wH7LbHCNTO1vRZpfybPgUwU
knqp9oto9lnvE6nKBg8AFCjv3MPK3we5WHZGaEyjCbvjlF7aUzPi82PW9mT1
8oghWEKV7zvkFyqgKBf61dcCEXq3hlfUq0JmajFN19ep68NJy26BiF/HSfSf
1d1o1IZbn7MTg5eOtz0u/3pbPdUfTi8aZ7svthSr496yN5SN+EhnxxOHrNux
ei67VSi7utfkiE+lScX75CI+TsVzr6G6NIbxb1NHWokURNWg/LdbBiDt518t
zQpY6BiWdM6mbZupgTkfds3bFMsj0DylYOpG/DqVJv2drIW8Ns9fb+rHZE05
Kz0PQ82IT5phnDoqUAyz3NtL2iEDtrwiriZZ7fnqyq5JxJeIoiCARy+ki3O0
4t7VRhsJL35jX6Td3EuFb3Y67Bcv2KntterI+jN5DmSikNRLtV/kRp8JglMP
AA1RWNUvehL9VthzsIoPZ+b2QHSnBSmeyiP2Ob+fUxHx0eyj41nMnq6PGvwr
L/lS2Ktaxb5DfqEMBHLhFv/IpSsDsfCVWr1wtK9lZB9Rp64PJy1bvpLNE/Hr
0IJHh7bsCwz5K+TGi/Qq4v3IgkSfYdomzg9E3ot7UyHiGzvdr829OM8E6fD7
yZQGV9D4iC+pIZUmFe9L95tk+6fc4gQ/NWBaR3qrVhIFUTYomuproa0/ZbXz
7E2xXKz8yvwOuhbz5rH3Jtd7UnnNUwmmZkXVMOnvZS2ktanIO2mlRTdaeLX+
pTv1mo08Q/lBDZEK6pTCLJbvb4Wb3v3/Ia7myxTi2lerK7sk4geIB6v4FHYg
acSvF0X+frwgbYbJkoiGd0Ir4qNeNMFI0FQ/S2298Uv+WH46W9JF1fVaoouJ
+jN5DmSikNRLDb9YWwOv4QOagvc1bRqzr3hnEj6DO7bE7YHYxvBR+OAO7HDF
N3+xksApLES4CoWV5eSU5560YiGj/SRbzmsvsXWZ/byE74qgmaes9elId1vf
B1+KygqS7+13WHZa2KWrQ2dqIWbe76U+nuxCGQjkEv7v85GJBsiAjZLzJ9D0
IxM6Wu5PrF+eQ3SlPjxl74gGP4lmHRmHsCYcz8VIy5avZKXorVfCWornE8ig
7R8kEf+uYwe8W4vnG2LXL3FkvLc7R45cde1tSkZuQWllLZ844nMjFhvQ21id
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
CvQ=
    "], {{0, 376.}, {678., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{678., 376.},
  PlotRange->{{0, 678.}, {0, 376.}}]], "Text",
 CellChangeTimes->{{3.853663921913958*^9, 3.853663940733756*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"4d429d8a-cedb-41da-b974-24b986ed511a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"First", "@", 
  RowBox[{"Timing", "@", 
   RowBox[{"Quiet", "@", 
    RowBox[{"defVel", "[", 
     RowBox[{"F0", ",", 
      RowBox[{"1", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"First", "@", 
  RowBox[{"Timing", "@", 
   RowBox[{"Quiet", "@", 
    RowBox[{"defVel", "[", 
     RowBox[{"F1", ",", 
      RowBox[{"2", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.82588186268151*^9, 3.8258818648688526`*^9}, {
   3.8259433087435827`*^9, 3.8259433112195444`*^9}, {3.8492950241893516`*^9, 
   3.8492950410649185`*^9}, {3.849297412932334*^9, 3.8492974134236803`*^9}, {
   3.8492975933793507`*^9, 3.849297593799762*^9}, {3.849297646758662*^9, 
   3.8492976647533484`*^9}, {3.849297733640441*^9, 3.8492977518750415`*^9}, {
   3.849299374797883*^9, 3.8492994065492067`*^9}, 3.8493000131343966`*^9, {
   3.8493113762048397`*^9, 3.8493113774451494`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"3861e854-3e2e-4b57-ad4e-9cfc166ac05f"],

Cell[BoxData["0.019887`"], "Output",
 CellChangeTimes->{
  3.849297594169239*^9, 3.849297665456025*^9, 3.84929775337173*^9, 
   3.8492985188700185`*^9, 3.849298741373762*^9, {3.8492993763409243`*^9, 
   3.8492994070907407`*^9}, 3.84930001364957*^9, 3.8493005649940166`*^9, 
   3.849308399302292*^9, 3.8493107255575457`*^9, 3.849311378364419*^9, 
   3.849311529620733*^9, 3.850400923483797*^9, 3.8536219215105305`*^9, {
   3.853662125442874*^9, 3.853662145616569*^9}, 3.8536632578189173`*^9, {
   3.853847995335238*^9, 3.853848012535817*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"50fc4cd4-6fa7-4d56-848a-a683071e63b1"],

Cell[BoxData["0.022703`"], "Output",
 CellChangeTimes->{
  3.849297594169239*^9, 3.849297665456025*^9, 3.84929775337173*^9, 
   3.8492985188700185`*^9, 3.849298741373762*^9, {3.8492993763409243`*^9, 
   3.8492994070907407`*^9}, 3.84930001364957*^9, 3.8493005649940166`*^9, 
   3.849308399302292*^9, 3.8493107255575457`*^9, 3.849311378364419*^9, 
   3.849311529620733*^9, 3.850400923483797*^9, 3.8536219215105305`*^9, {
   3.853662125442874*^9, 3.853662145616569*^9}, 3.8536632578189173`*^9, {
   3.853847995335238*^9, 3.853848012559031*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"26d825a3-af7e-4f7c-b83f-dde8161f97a3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"proj", "[", "u_", "]"}], ":=", 
  RowBox[{"Projection", "[", 
   RowBox[{"u", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->"In[92]:=",ExpressionUUID->"cb7e30fc-6238-4b07-858e-fcc601e9b188"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y0Old", "=", 
   RowBox[{"proj", "[", "x0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y1Old", "=", 
    RowBox[{"proj", "[", "x1", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", "Infinity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thr", "=", "$MachineEpsilon"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "\[Delta]", "]"}], ">", "thr"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Step", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yOld", "=", 
        FractionBox[
         RowBox[{"y0Old", "+", "y1Old"}], "2"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Step", " ", "2"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"z0", "=", 
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[ScriptCapitalN]", "^"], "F0"], "[", 
         FractionBox[
          RowBox[{"yOld", "-", "x0"}], 
          RowBox[{
           SubscriptBox["\[Gamma]", "F0"], "[", 
           RowBox[{"yOld", "-", "x0"}], "]"}]], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"z1", "=", 
        RowBox[{"-", 
         RowBox[{
          SubscriptBox[
           OverscriptBox["\[ScriptCapitalN]", "^"], "F1"], "[", 
          FractionBox[
           RowBox[{"x1", "-", "yOld"}], 
           RowBox[{
            SubscriptBox["\[Gamma]", "F1"], "[", 
            RowBox[{"x1", "-", "yOld"}], "]"}]], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Step", " ", "3"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Delta]", "=", 
        RowBox[{
         RowBox[{"proj", "[", 
          RowBox[{"z0", "+", "z1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Step", " ", "4"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[Delta]", "!=", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Delta]", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"y1Old", "=", "yOld"}], ";"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"y0Old", "=", "yOld"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"results", ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "yOld"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"y0Old", "//", "N"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "y0Old"}], "}"}], "//", "N"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.849297680423876*^9, 3.8492981131141853`*^9}, {
   3.849298145410428*^9, 3.849298445887929*^9}, {3.849298506534726*^9, 
   3.8492985069620543`*^9}, {3.849298537159333*^9, 3.8492985837922707`*^9}, {
   3.8492986931614847`*^9, 3.84929870274846*^9}, {3.8492987707111826`*^9, 
   3.8492987872960615`*^9}, {3.849298827638672*^9, 3.849298869383954*^9}, 
   3.8492989592388477`*^9, {3.8492990000036387`*^9, 3.8492990046082773`*^9}, {
   3.8492994118013945`*^9, 3.849299456477922*^9}, {3.8493005040591564`*^9, 
   3.8493005236637316`*^9}, 3.8493007327876687`*^9, {3.8493015314545827`*^9, 
   3.849301531670103*^9}, {3.8493015776910024`*^9, 3.84930157899148*^9}, {
   3.849311279927106*^9, 3.8493112899051046`*^9}, {3.853663223838332*^9, 
   3.853663271261894*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"6e469a36-176a-4453-9a2e-168befc1c5b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.5382642441655894`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8493015910947657`*^9, 3.849308661426547*^9, 3.849310726496493*^9, 
   3.849311291811108*^9, 3.8493113808604965`*^9, 3.853621922413762*^9, {
   3.853662125621913*^9, 3.853662145784608*^9}, {3.8536632252619104`*^9, 
   3.8536632740799675`*^9}, {3.853847995430151*^9, 3.8538480126544123`*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"17634cfc-3f38-4eb8-9b31-0e2d9f7bf47c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"results", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Value of |\[Delta]| (Log)\>\""}]}], 
    "]"}], "\[IndentingNewLine]", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.849298529052208*^9, 3.849298529474987*^9}, {
   3.849298588173235*^9, 3.8492986609748154`*^9}, 3.8492987410735292`*^9, {
   3.849298797681944*^9, 3.8492987999718275`*^9}, {3.8492989010644245`*^9, 
   3.849298936884098*^9}, {3.849299043984064*^9, 3.8492992122502985`*^9}, {
   3.849301161351983*^9, 3.849301162388447*^9}, {3.8536632895618973`*^9, 
   3.8536632920946617`*^9}, {3.853847950730495*^9, 3.853847960395458*^9}, {
   3.8538480062835207`*^9, 3.853848006873352*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"487336c5-c313-44b7-b515-9aa8518dff1c"],

Cell[BoxData[
 GraphicsBox[{{}, InsetBox[
    GraphicsBox[{{}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         NCache[
          Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJw1zAtIk1EYxvGxChtl6yIus4GamjM1r7s43R73TTcV0goSzDKXsxRN7UYW
2ZgmilJpmgzEWmJWlmQiBiV9lHYhmjCqYaBgzZgo4QQthNkF3+/A4fA7f943
0FB+wMjn8Xjx/+7/d/XMq8/0KtVP786/pA88EdrLJoY3sKtcj7aa0Af7Kpap
b4bNEZw4y66l7oPse8J86x4heTv4ReLpFxYf8k6s+L1Z18puIwegXFS33KIT
k4PQOX3qZ8W4iBwM5th3TabNnxyKnE8nv57rCiSHwT3bzMjrA8jhuLDYYmm0
7iJHoKNSsgMLnKPw2dhlPjoZRo7GIefK2Y/mEHIMJEWZOWVZu8mxWBF9yeue
k5DjkHXeq++mIIIcD/OJRQsTzjkBFj/RjcHqGLIUw+KpmezOSLIMUfdnKg+H
7CXLUXqkPuh2aTRZAdaWW3W1gZtPhOuOr7MnP4GsxMLQkLUJseQkFDDFUw0e
zskwDow4Xr2NI6twy7Bmf/5APFmNhzUGeb2/lAz4drgK656RTcBjwQR6WmXU
U9BWrHA7lsimFBjyBofcJQrqGlxRHb90ek5OXYOyTS4P/3oidQbOy+w7dzXZ
xOC3YCRX5EmmrkWoXfH8m15JXQuvlqK+LRuTqKfi4CjTHD5NNqWiqWZsbOsf
bj4NBRnjk0ujKdTT8L6hSlzbr6KugzBBZP1VqKauQzs/0pjkDep69HbbneIS
skkP12jatbYPXE+H9NFMrV3G7U/Hj8Z27/7XZF4GJi/yhXWBWvYv47X0zQ==

         "]]}}, {{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, -42.4409138044253},
     DisplayFunction->Identity,
     Frame->{{False, False}, {False, False}},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {
       Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{23.295918367346943`, 1.4999999999999432`}, {
      12.856649687666419`, 16.500000000000014`}},
     Method->{
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}},
     PlotLabel->FormBox["\"Value of |\[Delta]| (Log)\"", TraditionalForm],
     PlotRange->{{0, 52}, {-42.4409138044253, -1.0397207708399179`}},
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->FrontEndValueCache[{Automatic, Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, {
       Automatic, {{-41.44653167389282, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "18"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-13.815510557964274`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 
          0.}}, {-4.605170185988091, 
          FormBox[
           TagBox[
            InterpretationBox[
             StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
             AutoDelete -> True], NumberForm[#, {
              DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
          0.}}, {-36.841361487904734`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}, {-9.210340371976182, 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
         0., 
          FormBox[
           TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
          0.}}}}]], {177.5116564557552, -117.075}, 
    ImageScaled[{0.5, 0.5}], {338.1174408681051, 223}], {}},
  ImageSize->{
    UpTo[360], 
    UpTo[223]},
  PlotRange->{{0, 355.0233129115104}, {-234.15, 0}},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.8492983057324705`*^9, 3.849298338757734*^9, {3.849298525359454*^9, 
   3.8492985298572097`*^9}, {3.8492986010201406`*^9, 3.84929866184602*^9}, {
   3.8492987063947463`*^9, 3.8492987437370005`*^9}, {3.849298791829035*^9, 
   3.849298800408249*^9}, 3.8492988743051744`*^9, {3.849298917480049*^9, 
   3.8492989379986057`*^9}, 3.8492990085721493`*^9, {3.8492991090059986`*^9, 
   3.849299122113288*^9}, 3.849299166050665*^9, 3.8492992135281563`*^9, 
   3.84929938220693*^9, 3.8492994201415243`*^9, 3.8493000212537713`*^9, 
   3.849301163278823*^9, 3.8493107297484818`*^9, 3.8493112954637585`*^9, 
   3.8493113913627424`*^9, 3.8536219265944386`*^9, {3.853662126355135*^9, 
   3.8536621461942215`*^9}, {3.853663227186615*^9, 3.853663293702547*^9}, {
   3.8538479955514193`*^9, 3.85384801275856*^9}},
 CellLabel->
  "Out[101]=",ExpressionUUID->"db22c9b0-7897-4bca-8661-d161cc8e0314"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "path", " ", "during", " ", "fist", " ", "10", " ", "steps", 
    " ", "of", " ", "algorithm"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListAnimate", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{"x0", ",", "x\[CapitalSigma]", ",", "x1"}], "}"}], "]"}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x\[CapitalSigma]", ",", 
       RowBox[{"results", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{";;", "10"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8492992401227765`*^9, 3.849299294815214*^9}, {
  3.8492996784180045`*^9, 3.8492997454031644`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"d46897e3-6622-41cf-bb3f-c8c147685c72"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i29$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i29$$ = 1}, 
     "\"max\"" :> {$CellContext`i29$$ = 10}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i29$$], 1, ""}, 1, 10, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    PaneBox[
     PanelBox[GridBox[{
        {
         ItemBox[
          ItemBox[
           TagBox[
            StyleBox[GridBox[{
               {"\<\"\"\>", 
                AnimatorBox[Dynamic[$CellContext`i29$$], {1, 10, 1},
                 AnimationRate->Automatic,
                 AnimationRunTime->99.04660511016846,
                 AnimationTimeIndex->4.046605110168457,
                 
                 AppearanceElements->{
                  "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
                   "DirectionButton"},
                 AutoAction->False,
                 DisplayAllSteps->True]}
              },
              AutoDelete->False,
              
              GridBoxAlignment->{
               "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "ListAnimateLabel",
             StripOnInput->False],
            {"ControlArea", Top}],
           Alignment->{Automatic, Inherited},
           StripOnInput->False],
          Background->None,
          StripOnInput->False]},
        {
         ItemBox[
          TagBox[
           StyleBox[
            PaneBox[
             TagBox[
              PaneSelectorBox[{1->
               GraphicsBox[LineBox[{{-1, -1}, {0, 0}, {1, 1}}],
                ImageSize->Small], 2->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-1, 2], 0}, {1, 
                   1}}, {{-1, -1}, {-0.5, 0}, {1, 1}}]],
                ImageSize->Small], 3->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-3, 4], 0}, {1, 
                   1}}, {{-1, -1}, {-0.75, 0}, {1, 1}}]],
                ImageSize->Small], 4->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-5, 8], 0}, {1, 
                   1}}, {{-1, -1}, {-0.625, 0}, {1, 1}}]],
                ImageSize->Small], 5->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-9, 16], 0}, {1, 
                   1}}, {{-1, -1}, {-0.5625, 0}, {1, 1}}]],
                ImageSize->Small], 6->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-17, 32], 0}, {1, 
                   1}}, {{-1, -1}, {-0.53125, 0}, {1, 1}}]],
                ImageSize->Small], 7->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-35, 64], 0}, {1, 
                   1}}, {{-1, -1}, {-0.546875, 0}, {1, 1}}]],
                ImageSize->Small], 8->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-69, 128], 0}, {1, 
                   1}}, {{-1, -1}, {-0.5390625, 0}, {1, 1}}]],
                ImageSize->Small], 9->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-137, 256], 0}, {1, 
                   1}}, {{-1, -1}, {-0.53515625, 0}, {1, 1}}]],
                ImageSize->Small], 10->
               
               GraphicsBox[
                LineBox[
                 NCache[{{-1, -1}, {Rational[-275, 512], 0}, {1, 
                   1}}, {{-1, -1}, {-0.537109375, 0}, {1, 1}}]],
                ImageSize->Small]}, Dynamic[$CellContext`i29$$],
               Alignment->Automatic,
               BaseStyle->"ListAnimateCore",
               ImageSize->All,
               TransitionDirection->Horizontal,
               TransitionDuration->0.5,
               TransitionEffect->Automatic],
              Identity,
              Editable->True,
              Selectable->True],
             ImageMargins->10],
            Deployed->False,
            StripOnInput->False,
            ScriptLevel->0,
            GraphicsBoxOptions->{PreserveImageOptions->True},
            Graphics3DBoxOptions->{PreserveImageOptions->True}],
           Identity,
           Editable->False,
           Selectable->False],
          Alignment->{Left, Center},
          Background->GrayLevel[1],
          Frame->1,
          FrameStyle->GrayLevel[0, 0.2],
          ItemSize->Automatic,
          StripOnInput->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
       GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.7], {
            Offset[0.5599999999999999]}, 
           Offset[0.7]}, "Rows" -> {
           Offset[0.4], {
            Offset[0.8]}, 
           Offset[0.4]}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8492992952004957`*^9, 3.8492993853317823`*^9, 3.8492994232802935`*^9, {
   3.8492996793353157`*^9, 3.8492997091290236`*^9}, 3.8493113162391977`*^9, 
   3.849311398933981*^9, 3.853621929736973*^9, {3.853662126918573*^9, 
   3.85366214631038*^9}, {3.8536632585033407`*^9, 3.853663277733929*^9}, {
   3.853847995605884*^9, 3.85384801280823*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"3e0be980-f0af-459b-9086-0227e3ea100d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Subsubsection",
 CellChangeTimes->{{3.8258719086288357`*^9, 3.8258719152614603`*^9}, {
   3.8258789604721537`*^9, 3.825878978972817*^9}, {3.8492996205110006`*^9, 
   3.8492996268783054`*^9}, {3.849299775022135*^9, 3.849299777532977*^9}, {
   3.8536621096450644`*^9, 3.853662112355006*^9}, {3.8536623068887377`*^9, 
   3.8536623282527447`*^9}, 
   3.853846586914701*^9},ExpressionUUID->"dfdfd2d2-666c-402d-81c8-\
3894d397dc8a"],

Cell[BoxData[""], "Text",
 CellChangeTimes->{3.8536639508255777`*^9, 
  3.853846584968112*^9},ExpressionUUID->"38eaabc2-3339-49a0-b4fb-\
410e3fb7dcc5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.82588186268151*^9, 3.8258818648688526`*^9}, {
   3.8259433087435827`*^9, 3.8259433112195444`*^9}, {3.8492950241893516`*^9, 
   3.8492950410649185`*^9}, {3.849297412932334*^9, 3.8492974134236803`*^9}, {
   3.8492975933793507`*^9, 3.849297593799762*^9}, {3.849297646758662*^9, 
   3.8492976647533484`*^9}, {3.849297733640441*^9, 3.8492977518750415`*^9}, {
   3.849299374797883*^9, 3.8492994065492067`*^9}, 3.8493000131343966`*^9, {
   3.8493113762048397`*^9, 3.8493113774451494`*^9}, 3.853846570720872*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"7d973991-5669-4a75-aa7f-c04034c863f9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.853846594227606*^9, 3.85384659422824*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"4f05ce69-139d-424f-982c-ef06c39c1e7d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.853846593171802*^9, 3.853846593172456*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"f1a44181-5d52-4cd1-90db-088cd60a5a43"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.849297680423876*^9, 3.8492981131141853`*^9}, {
   3.849298145410428*^9, 3.849298445887929*^9}, {3.849298506534726*^9, 
   3.8492985069620543`*^9}, {3.849298537159333*^9, 3.8492985837922707`*^9}, {
   3.8492986931614847`*^9, 3.84929870274846*^9}, {3.8492987707111826`*^9, 
   3.8492987872960615`*^9}, {3.849298827638672*^9, 3.849298869383954*^9}, 
   3.8492989592388477`*^9, {3.8492990000036387`*^9, 3.8492990046082773`*^9}, {
   3.8492994118013945`*^9, 3.849299456477922*^9}, {3.8493005040591564`*^9, 
   3.8493005236637316`*^9}, 3.8493007327876687`*^9, {3.8493015314545827`*^9, 
   3.849301531670103*^9}, {3.8493015776910024`*^9, 3.84930157899148*^9}, {
   3.849311279927106*^9, 3.8493112899051046`*^9}, {3.853663223838332*^9, 
   3.853663271261894*^9}, {3.8536633213652344`*^9, 3.8536634780353546`*^9}, {
   3.853663510904935*^9, 3.853663516292934*^9}, {3.8536637239069653`*^9, 
   3.8536637475352936`*^9}, 3.853663826239797*^9, {3.853663879910363*^9, 
   3.853663890340994*^9}, {3.85366396866107*^9, 3.853663976086007*^9}, {
   3.853664062054059*^9, 3.8536641996850424`*^9}, {3.8536642965240583`*^9, 
   3.853664337144969*^9}, {3.853664397350325*^9, 3.853664398480529*^9}, 
   3.853664439985937*^9, {3.8536645159428787`*^9, 3.853664533261042*^9}, {
   3.8536645740061035`*^9, 3.853664585040551*^9}, {3.8536646238206816`*^9, 
   3.853664718012146*^9}, {3.8536648122736454`*^9, 3.8536649029686832`*^9}, {
   3.8536649729214954`*^9, 3.8536649741914372`*^9}, 3.8536650091506815`*^9, {
   3.853846575492763*^9, 3.853846582162904*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"d4d71d99-0016-4bab-961e-d99de20f4ef5"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8538465908823767`*^9, 3.853846590883058*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"9b739e5d-28b0-40dc-9073-d3e35d8b83f7"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.849298529052208*^9, 3.849298529474987*^9}, {
   3.849298588173235*^9, 3.8492986609748154`*^9}, 3.8492987410735292`*^9, {
   3.849298797681944*^9, 3.8492987999718275`*^9}, {3.8492989010644245`*^9, 
   3.849298936884098*^9}, {3.849299043984064*^9, 3.8492992122502985`*^9}, {
   3.849301161351983*^9, 3.849301162388447*^9}, {3.8536632895618973`*^9, 
   3.8536632920946617`*^9}, {3.853664738607915*^9, 3.8536647413400726`*^9}, {
   3.8536647915254602`*^9, 3.853664803884774*^9}, 3.853846578452108*^9},
 CellLabel->
  "In[108]:=",ExpressionUUID->"fa4f87a7-e776-4c09-bc9c-b271c1557929"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.853846561890812*^9, 3.853846561906529*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"cd0537b5-9507-4e6e-b576-a1a061514db9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exact Solution Derivation", "Subsubsection",
 CellChangeTimes->{{3.8258719086288357`*^9, 3.8258719152614603`*^9}, {
   3.8258789604721537`*^9, 3.825878978972817*^9}, {3.849299770760157*^9, 
   3.8492997831110764`*^9}, 3.8536621039257336`*^9, {3.853662492357926*^9, 
   3.853662493787108*^9}},ExpressionUUID->"cbee2638-d041-4ce5-9dc2-\
901e5b885755"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"First", "@", 
  RowBox[{"Timing", "@", 
   RowBox[{"Quiet", "@", 
    RowBox[{"defVel", "[", 
     RowBox[{"F0", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], ",", 
        RowBox[{"Sin", " ", "[", "t", "]"}]}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"First", "@", 
   RowBox[{"Timing", "@", 
    RowBox[{"Quiet", "@", 
     RowBox[{"defVel", "[", 
      RowBox[{"F1", ",", 
       RowBox[{"2", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], "]"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.82588186268151*^9, 3.8258818648688526`*^9}, {
   3.8259433087435827`*^9, 3.8259433112195444`*^9}, {3.8492950241893516`*^9, 
   3.8492950410649185`*^9}, {3.8493000337408466`*^9, 
   3.8493000343240347`*^9}, {3.849300073627986*^9, 3.849300074831343*^9}, {
   3.8493097997807355`*^9, 3.8493098205519433`*^9}, {3.8493102660023794`*^9, 
   3.8493102940170803`*^9}, {3.849310331463202*^9, 3.8493103340226016`*^9}, 
   3.84931153613975*^9, {3.8503999357504435`*^9, 3.85039995802496*^9}, {
   3.8536622078708286`*^9, 3.85366227140976*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"73f77bb2-4ecd-4f6f-a72e-8bdc56162060"],

Cell[BoxData["0.017105`"], "Output",
 CellChangeTimes->{
  3.8492799391008368`*^9, 3.849295042466104*^9, 3.8492955803618197`*^9, 
   3.8492960513043766`*^9, {3.8493000263913155`*^9, 3.849300034841027*^9}, 
   3.849300076083056*^9, {3.8493098018275614`*^9, 3.849309821197934*^9}, {
   3.849310268469942*^9, 3.84931029506698*^9}, 3.8493103355798364`*^9, 
   3.849310733625725*^9, 3.8493107902843585`*^9, 3.849310936062014*^9, 
   3.849311411842613*^9, 3.8493115365757217`*^9, 3.8536219365982637`*^9, {
   3.8536621289764204`*^9, 3.8536621630018206`*^9}, {3.853662224738738*^9, 
   3.8536622274427357`*^9}, {3.8536622578804092`*^9, 
   3.8536622744299994`*^9}, {3.853847995662586*^9, 3.853848012866274*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"f572af12-eb73-4f2f-9f0c-b66190255a22"],

Cell[BoxData["0.016922`"], "Output",
 CellChangeTimes->{
  3.8492799391008368`*^9, 3.849295042466104*^9, 3.8492955803618197`*^9, 
   3.8492960513043766`*^9, {3.8493000263913155`*^9, 3.849300034841027*^9}, 
   3.849300076083056*^9, {3.8493098018275614`*^9, 3.849309821197934*^9}, {
   3.849310268469942*^9, 3.84931029506698*^9}, 3.8493103355798364`*^9, 
   3.849310733625725*^9, 3.8493107902843585`*^9, 3.849310936062014*^9, 
   3.849311411842613*^9, 3.8493115365757217`*^9, 3.8536219365982637`*^9, {
   3.8536621289764204`*^9, 3.8536621630018206`*^9}, {3.853662224738738*^9, 
   3.8536622274427357`*^9}, {3.8536622578804092`*^9, 
   3.8536622744299994`*^9}, {3.853847995662586*^9, 3.853848012882718*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"daa8d020-7dee-426e-b388-1b551783cce8"]
}, Open  ]],

Cell["\<\
We can find the scaled normal cone of F1 from x0 at any point in space.\
\>", "Text",
 CellChangeTimes->{{3.8492998152772365`*^9, 3.8492998421982365`*^9}, {
  3.8493000525174894`*^9, 
  3.8493000594272437`*^9}},ExpressionUUID->"3705b4e6-4dc4-450c-a580-\
6d9d0d8ef551"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox[
   OverscriptBox["\[ScriptCapitalN]", "^"], 
   SuperscriptBox["F1", "\[Degree]"]], "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "-", "x0"}], "]"}]], "Input",
 CellChangeTimes->{{3.8492950107649*^9, 3.84929501794816*^9}, {
  3.849295575935155*^9, 3.849295576354159*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"9d7af5d8-dcd6-482f-a5f5-a08a33dce3b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "y"}], ")"}], "2"]}]]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "y"}], ")"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "y"}], ")"}], "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.849295019165002*^9, 3.8492950444197335`*^9}, {
   3.8492955774604983`*^9, 3.849295582518714*^9}, 3.8492956136161017`*^9, 
   3.8493000473148355`*^9, 3.849310270573844*^9, 3.8536219368715324`*^9, {
   3.8536621290974483`*^9, 3.853662163118392*^9}, 3.853662227554761*^9, {
   3.8536622620438323`*^9, 3.85366227452757*^9}, {3.853847995696653*^9, 
   3.853848012900393*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"76182078-2d2b-40bd-8107-fd762d45e3ae"]
}, Open  ]],

Cell[TextData[{
 "This plot shows the x-component of the dual vectors ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Zeta]", "0"], TraditionalForm]],ExpressionUUID->
  "6d1ffa29-1117-429f-8783-e8a3a527d8c4"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Zeta]", "1"], TraditionalForm]],ExpressionUUID->
  "080254a5-10df-4657-b9b4-ccbe29acb8a6"],
 " ",
 StyleBox["along the interface \[CapitalSigma]",
  FontWeight->"Bold"],
 ". The sum of these components is shown in green."
}], "Text",
 CellChangeTimes->{{3.8492998152772365`*^9, 3.849299934237378*^9}, {
  3.8493130512076435`*^9, 
  3.8493130666328135`*^9}},ExpressionUUID->"c4ced621-236a-4cbe-9025-\
891bacc2cf1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[ScriptCapitalN]", "^"], "F0"], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "0"}], "}"}], "-", "x0"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[ScriptCapitalN]", "^"], "F1"], "[", 
        RowBox[{"x1", "-", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[ScriptCapitalN]", "^"], "F0"], "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "0"}], "}"}], "-", "x0"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[ScriptCapitalN]", "^"], "F1"], "[", 
        RowBox[{"x1", "-", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8493085304068685`*^9, 3.8493086303327255`*^9}, {
   3.8493091431643353`*^9, 3.849309149423788*^9}, {3.8493092259736414`*^9, 
   3.849309279494113*^9}, {3.8493094094780912`*^9, 3.8493094485280294`*^9}, {
   3.849309605628954*^9, 3.8493096912799587`*^9}, {3.849309914072998*^9, 
   3.849309916042121*^9}, {3.849310122811602*^9, 3.849310122943898*^9}, {
   3.849310467588123*^9, 3.84931050836651*^9}, 3.8493109564988875`*^9, {
   3.84931113600484*^9, 3.8493111785422373`*^9}, {3.849311248820326*^9, 
   3.849311274054985*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"d3188dc7-401b-4b94-a0f8-e7cc670be46c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1GdQ03ccBnCGHBKUVbFHISioCARUUEIV7RdllFBmKrKUGKyUpSgtAkfF
hTKkp6VyICoKidQJODEyfjJikELRMCJTQ+DPSPIPU5MI+Te964vnnvu8et49
VtFJ9MNaGhoa/ur815tg9RRBEGg6VyO09BaGkhTrchRKArFnTowa3sBQ9RMn
m7kFAnWNlLWcuoohZ1v/aExMoMyTkvSIAgy5Gmf1twsIFKm0L/9yDkPuopm2
q1UEohiFu0piMETP7ri/lUEgWn5n/2kKhlI7s4783KBCUfq1Fb5VY6i7W3+q
kbmEkgIG88uyRxH5VdIqV4tFxI13JM0FitCzhBYdwyElYpBaC+4phOhgvtN0
31kFaouN01sI/4jkBRk5COSI5/JQiP04hFgGw2bFwk9o30D3sDmtD133dUru
yl1AzOI/HgfKutHZRGaaHW0eTentTtl66S3K0L6XmiydRe2CzSvu6/EQ83Tn
+t47M8hDYmVLjnuJCuvHiq/HTyOt2WV9vewS9PKD7YoH1jjq63pTE9T6ENYZ
ue/ZWypGNB+jnS4HGuGxfU78iGgCGXaKfDY2/w0fuI/WUqkYosZt//6nF3wY
cyh0Rs9F6LBrT0DedC8YZ96lbtIUIukqdwXFdgAcqDKH23ODSJczLimsH4Zz
ntK3nDQBEpW9jmixFILp3srL4V/zke5XsnJRxQg8/sQ1bF3fhiooboRQIoLb
A2O/T2Y1oKglRfUVmzE4EGzxdOAQG4UO3eQ22WHAIWX0NKWwYPm51sCb+uPg
MqJpeSYMgWlL3Xe3Rsdh3XStYkfTG2jTDU/EiyaAxurrCAjjg+eUb9paz0nw
8jfRXngmgEMLOP9a3yRcYghOb6kZhIKTwdW8kCngBZBXBpkIwdbIsnaiYwqk
VqaZ/BIReGRWU8ycxZDyK4V5aTUGDu1msyfzxCAYNKLHtE6Ak/2T4/UfxXAw
fee4rp8YUNm1E9/aSaCZ4prXrINDUb1SaH1MAjZ6dRNsn2k45bY/RvOBBMh1
CV46OTNguvHzvaNCCWgote4mj8yChTseabNaCp+D66O4G+Yhj+pXrtwjhYFt
DPMNWQtQfOH8O3qSFI6FGhlbD36CjcbZR0lFUjC7Mhq2jCyHCBO+jj5HCpWR
t/6aS1MAmUd3lfVLIXTXKZ/WeiUMv2gPMpRL4VHUEesdi1/gevahC7+Z4CAn
eWhzQpagyfFtnKYjDvR3blRysQpKCkqfij1wILnpN9bdUMEQ86FXgCcOjez+
H/azVJDr8/55tdpb0tKZ1ypVIHhRsz3FCweDNTX5ZlwVFG4zbl70xuFNorPI
dFYFfpYcmY4vDu7L7S4b+BFAyu3V1wxS7x+Xf1MZTEBSZTOHoXbVAO+2fygB
um4JtAa1LatiavOjCVjFNjfICMZhMYSNkdIJKDVgbJqj41DDWrNLt4IAO5Z3
z1AIDkdXyngV9wlAsQ/YO/bhYJPaQPd+RMC8Y8G+IrWv+B6IPV9HwC/eBtFB
oTgkz5T8qd1FQKCPuVljGA72kfGWrPcE8Du6lizCcRC2bL+7Z5iApu5Ebpra
QcXvG85MEqB0Oba0OQKH5Vp3aFYyAvDY2SMX1UYJqd2v5gmo/CerEVP7RI83
46CSgNeeW+W7I3H4/7+gr1zP5Iba/wKuvJVU
       "]]},
     Annotation[#, "Charting`Private`Tag$93263#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtlP870wkcwIVdonx7jlJNkYpaie62JL09SicZ2YkkZnXXFyraXeHRIadO
nUplnWqpawj1KArXmb2jPL52CvsM+9LDpCRsMs1a+1z3PPfD63k9r3/g5bQn
gfWjsZGREfML/3k12L8jSRJ7b8+yvRGlwITpJdnTOhLlHcqybV/6wUOPZR80
JNZcrKbpdinQ05W5Z2iExCKKy0j4l2bYZPW1S0gcZHiwrCIV6KtUt169T+Km
2/z61HAFsn57fnctm0RzPW3YL1SBSR1Zh/eLDLihWHMwe4sCu7st3tVzPuPK
CanP4CoFUp8kfM1YqMdjM8tDzewUWBX/jGIl1+H1K3YNIp0cY3M8VL2Z03g+
0T1QKpWj9lJqNoIWjzqv3X1BKEeBpcIhv38Ke/hn/yz8Q478QA9u1xkNuuVn
BhonyjHzECfZbeskVptOxRV/J8dUk7Ik7ugEVor/aq2bK0dORocLUaLG8Mu0
qOIhGfLqXufz41RY65ZT/75Chn+/cp19z3kMs0q/r37HleESa1+/sIIRHPvK
2eKThwwrV2THDSjfYpmpL1OvlOKrxorFdPoQJp22Vpecl+JrGs8Tq5XY5X3C
bhVdijZppfTVM/pxhoN8eGFbH9Lo47SiDzIcvJfyMDiqD3/dPPricbIE1aa5
XFZXL9qFledGzu1Emk1GwtUNvVg51WjV7NKKphkHeTEFPVgkfX1uOEuE/mlB
nE6ZBKNDFz6S7i1EaRoSPGsJPjZPFTccE0An0yc/3J3AbwdmOJ7ciVB4npYe
u0CMS1S10+sbWiBS1sEo1XbhVkHv8+CdnfA+c9o7jteJ/kxbE02VBHr2j9r7
zX6JF9iSjDU1MrBn+IYEDP2DTcHUOdtt+6Fq3eLDDy3bcNTJLq3zmhIsHDeb
vaE24bGfV3Iu2A+BRtMwv2S8ASUya9a+5rcwPm/YK9RNiLEpG97MDBoB7p25
Ryr4lfh0JePsU8oYWGbbcqPybuKyWcK3hQEqaNvXZp7umglUYbw/JVsNMbHe
fu17S8BIZ1zKHZgAivANRVpVDR9D62Ial06C3eR02VqrJyD9hr1gaZYGakVH
4xfJnkFihLWNs2wK2O6Th9zWtYBD3uBOU6oW2gdGL/Wo26E86tadD8nT4GUI
vrab+QIifNIDmut0sIpxfJ0l8RIqYg47r9d/AuoZdvoO9y7Qmm8yebzjMzzo
DmOLTnQD66U3nZpvAM+YU/tv5orB3NuiXnjDAKf7roQs54mhvrBv226BAUwk
QZJ7V8WwJjmFc73cACsoIa0PbovBclFNjkOjAcJ+8WXzH4mh5ZCn0m7CAMUX
xwJMesTga+aWaxlEQkF0pOc8KgHao9r55aEk3FXvYoY7EXBf2lTEjCCB83GE
dmkpAY7399Xm7CFhly5wo8lqAvQ7CofMU0hYQHa3tG4koEawyGdmMQn65fqT
KjYBR+aMNxXfJcFKv/iIxQ8ELEsSsbZUkPCTTrXG5QABeYHRB04JSThXYAUh
iQRw1dcum3SRQLEW8H/PIGBFVJyjoIeE+c1p0bwsAvqfeZX6KUho89J+5mcT
sD2/R3RymISkFsZAUS4BZsYlW53GSUh4RXe9k0cAxid1P5kkYfiGP6s4n4Dj
4i3sWB0Jwup0joBPwP//AtUZo4iCWwT8C045l9Q=
       "]]},
     Annotation[#, "Charting`Private`Tag$93263#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwtlGs01HkYgCeSUpRailAopVRKjV2z9aqW0tIJFaVyabcidqTNjOzKNSp7
sslZZdpsgxQNSsk2vK7rklhjXHJdoxENze1Hhpr/tufsh+c8n56vj3kA0+N7
DRqN5vaZ/7wRDN9RFIW8Rxqh9LcKZKosk1TTFDYEk96jYgUWPtlspZygsDMt
KiRqSIFb1roFDEsoXOuIH6oGFGivH9/d1Emh1cs/snd2KdBxSN54q4DCnMIl
CwwaFOiR+CrPzpfCNVpP1ug/VCCrJT7kdLkad0i7Q/YEKlAonP+u0v8TVlmK
211a5GhawfzC3uQjOtrH3mJskOPTszVaC/umsSNoVBUfKUO/5M2y17Eq1DeP
4Yn2SHHqRmQSwhSa2MjMGEnjyNXrN0ofnMSl/E2OfqES5OzbHNZ2ZQKdll1V
524axdhgf7a1C8EDictlwZJhjNR8yAobV2CT35lcl/1v0D+6ZVVHrhztEm8L
wisGMa1MnM4JkmEP22STw7F+/HNg7YJ8i/c4j3n07j+lXWi5yHHXwd8l2Cgy
CvGLa8PH65KCREMj6OTAcW+d3YQDtUUr6fRhjHXgeV7Jr0SxTdoWfDaEz/U5
xtcMi1A/6gF946xBpM2Ud1XvZoENXWqTrezFZNvnYpMrRRD3zfjfpexOfPjz
dEKwsAIMDvJSjiwVYI01P9/Hoh4eT9YurF/ViCk8I0FjeDNk94h/GY0vR9ZP
92leoQI47m5S3HMyC9sY0cXSXe1QqhPZXnWBCzuee2qPvO2EbaJZZjHeCJdV
ruqBR91gKXuhcqhqAIadKNPOvg9cuK9f7fcWAMedU9yhGAAnt8WaE087gbWT
XXfRcxCu+3ZG25b0QhMzhrONI4K6/aa6BxYPwsysjgGGzhsYNzeIEtwegorw
u4F3g8Rw4cf1/tcNh6FAL1CS2jwMnb2LPE7Vj8AS7fB9qT4j4Bfx9VttVwm0
5nftvdc+CtXr7a9Wa70HL+ugOdHnJWA1jz+StVcGxoGJAVwyBqb8s05aSXJY
3mfMzDv9HmjTGg/CRAq4Y5/HHxyTwgf3shO1qwnUH0n46yRXBj1bfZevjp8A
yxnbwxs85RDqtUjfoncSLumJvruqkIPRzTfes02n4HKtc1rFRQXwfDLvK9kq
MLXcXtVMU4LX9kt768umweFdHP3aOSUUnQixcPg4AwY587hL2pUwpbNbs/TQ
J9B1LXMt3EbAo5VBN01XQ3embbHpZQI6jPmV/DtqSDnNnwxNJFCZ1f3tMa4a
tI7Cr9VJBGzZEf4ZPDU8u8NsOXWNgN6KkmSjWjVklnpHZKcQaAjeMmSg+Nzb
LWvUzCDgONc6Rc+VgrGMmBvOBQSmzk0Z89wpuJf6ZWhCIYGCnrpsNy8KjmXI
CqqLCJgVnHqRHEBBZkrm4R3FBD4eyhrWiaDAsC7LxaaUQAl3xXbtHApu+ljM
l1QR+EFXWpeTR8HJ8/0bVtYQsGKVezgXUfDboYSSg7UEbu47fiaBT0Gfzksa
v45AmPx2qmYbBdZnnp2PayKwzifIjNtFgSzdpePJKwKDNV892NVPgZC99d5Q
M4ED6V3lMaMU+Og6s3a2EpirketiLqXAc2xODFNAAM+yhBWEgtZmzwlOG4Hw
dmdfv2kKFqdECBuEBP7/F4woa8wm2wn8C78yoD0=
       "]]},
     Annotation[#, "Charting`Private`Tag$93263#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-1.1814484000595757`, 1.3022366716315847`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.849308553659051*^9, 3.849308630836641*^9}, {
   3.8493091436599426`*^9, 3.8493091501840553`*^9}, 3.8493092279421163`*^9, 
   3.849309289157595*^9, {3.8493094344493465`*^9, 3.849309449393651*^9}, {
   3.8493096239923477`*^9, 3.8493096918954344`*^9}, {3.849309806803007*^9, 
   3.8493098263201838`*^9}, 3.8493099167704945`*^9, 3.849310123503454*^9, {
   3.8493102739168997`*^9, 3.849310297977091*^9}, 3.849310341009317*^9, 
   3.8493104681917195`*^9, 3.849310500573656*^9, 3.849310738715629*^9, 
   3.8493107958803153`*^9, 3.8493109581686783`*^9, {3.849311162387478*^9, 
   3.849311178908171*^9}, 3.8493112673937826`*^9, 3.849311415990734*^9, 
   3.849311539557719*^9, 3.853621937186689*^9, {3.853662129163351*^9, 
   3.8536621631774054`*^9}, 3.8536622276137753`*^9, {3.8536622620968447`*^9, 
   3.85366227457458*^9}, {3.853847995742787*^9, 3.8538480129390707`*^9}},
 CellLabel->
  "Out[115]=",ExpressionUUID->"16dfe1b2-c06d-43dd-85dd-9700ed4fb9f3"]
}, Open  ]],

Cell["\<\
Where these curves are equal opposites is optimal crossing point, which can \
be solved exactly.\
\>", "Text",
 CellChangeTimes->{{3.849299952769409*^9, 3.8492999773582087`*^9}, {
  3.8493125477193956`*^9, 
  3.8493125547322135`*^9}},ExpressionUUID->"6c00caa5-f4c0-4ae6-b729-\
949a89bda76e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[ScriptCapitalN]", "^"], "F0"], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "0"}], "}"}], "-", "x0"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "-", 
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[ScriptCapitalN]", "^"], "F1"], "[", 
    RowBox[{"x1", "-", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"x", "/.", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"%", "==", "0"}], ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xOpt", "=", 
  RowBox[{"First", "@", 
   RowBox[{"Select", "[", 
    RowBox[{"%", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Im", "[", "#", "]"}], "==", "0"}], "&"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "N"}]}], "Input",
 CellChangeTimes->{{3.8492958830606427`*^9, 3.8492960233921533`*^9}, {
   3.8492961031727867`*^9, 3.849296103747302*^9}, 3.849296238601136*^9, {
   3.8492994695768285`*^9, 3.8492995049208765`*^9}, {3.849308679731207*^9, 
   3.8493087038903327`*^9}, 3.8493114259971576`*^9, {3.849311771420001*^9, 
   3.8493117792601986`*^9}, {3.8493122204263763`*^9, 3.849312225095995*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"5d8a1683-3e5e-40a4-9e41-dce12555a17e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"1", "-", "x"}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "2"]}]]}]]}], "+", 
  FractionBox[
   RowBox[{"1", "+", "x"}], 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "x"}], ")"}], "2"]}]]]}]], "Output",
 CellChangeTimes->{
  3.849295861761368*^9, {3.849295894356209*^9, 3.849295980231067*^9}, {
   3.849296011350252*^9, 3.8492960250830016`*^9}, 3.849296059857041*^9, 
   3.84929610410399*^9, 3.8492962390952187`*^9, 3.8492994372988477`*^9, {
   3.8492994754846907`*^9, 3.8492995054193125`*^9}, 3.849300084420362*^9, {
   3.849308680646079*^9, 3.8493087044411983`*^9}, 3.8493114275131445`*^9, 
   3.849311546950085*^9, 3.849311780002988*^9, 3.849312225636722*^9, 
   3.8536219373482556`*^9, {3.853662129207361*^9, 3.8536621632144136`*^9}, 
   3.8536622276527834`*^9, {3.8536622621318517`*^9, 3.8536622746085877`*^9}, {
   3.853847995754919*^9, 3.853848012951035*^9}},
 CellLabel->
  "Out[116]=",ExpressionUUID->"b1b70ff1-d596-40e4-9845-b81294e246ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "6"]}], " ", 
    SqrtBox[
     RowBox[{"6", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"5967", "-", 
         RowBox[{"216", " ", 
          SqrtBox["519"]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"221", "+", 
          RowBox[{"8", " ", 
           SqrtBox["519"]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SqrtBox[
     RowBox[{
      FractionBox["4", "3"], "-", 
      RowBox[{
       FractionBox["1", "9"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"5967", "-", 
          RowBox[{"216", " ", 
           SqrtBox["519"]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "-", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"221", "+", 
          RowBox[{"8", " ", 
           SqrtBox["519"]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "+", 
      FractionBox["20", 
       SqrtBox[
        RowBox[{"6", "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"5967", "-", 
            RowBox[{"216", " ", 
             SqrtBox["519"]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"221", "+", 
             RowBox[{"8", " ", 
              SqrtBox["519"]}]}], ")"}], 
           RowBox[{"1", "/", "3"}]]}]}]]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.849295861761368*^9, {3.849295894356209*^9, 3.849295980231067*^9}, {
   3.849296011350252*^9, 3.8492960250830016`*^9}, 3.849296059857041*^9, 
   3.84929610410399*^9, 3.8492962390952187`*^9, 3.8492994372988477`*^9, {
   3.8492994754846907`*^9, 3.8492995054193125`*^9}, 3.849300084420362*^9, {
   3.849308680646079*^9, 3.8493087044411983`*^9}, 3.8493114275131445`*^9, 
   3.849311546950085*^9, 3.849311780002988*^9, 3.849312225636722*^9, 
   3.8536219373482556`*^9, {3.853662129207361*^9, 3.8536621632144136`*^9}, 
   3.8536622276527834`*^9, {3.8536622621318517`*^9, 3.8536622746085877`*^9}, {
   3.853847995754919*^9, 3.853848012957343*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"97fa0a52-d62c-46bd-8b0a-7741da989ca1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], " ", 
   SqrtBox[
    RowBox[{"6", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"5967", "-", 
        RowBox[{"216", " ", 
         SqrtBox["519"]}]}], ")"}], 
      RowBox[{"1", "/", "3"}]], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"221", "+", 
         RowBox[{"8", " ", 
          SqrtBox["519"]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}]}]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SqrtBox[
    RowBox[{
     FractionBox["4", "3"], "-", 
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"5967", "-", 
         RowBox[{"216", " ", 
          SqrtBox["519"]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "-", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"221", "+", 
         RowBox[{"8", " ", 
          SqrtBox["519"]}]}], ")"}], 
       RowBox[{"1", "/", "3"}]]}], "+", 
     FractionBox["20", 
      SqrtBox[
       RowBox[{"6", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"5967", "-", 
           RowBox[{"216", " ", 
            SqrtBox["519"]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"221", "+", 
            RowBox[{"8", " ", 
             SqrtBox["519"]}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}]}]]]}]]}]}]], "Output",
 CellChangeTimes->{
  3.849295861761368*^9, {3.849295894356209*^9, 3.849295980231067*^9}, {
   3.849296011350252*^9, 3.8492960250830016`*^9}, 3.849296059857041*^9, 
   3.84929610410399*^9, 3.8492962390952187`*^9, 3.8492994372988477`*^9, {
   3.8492994754846907`*^9, 3.8492995054193125`*^9}, 3.849300084420362*^9, {
   3.849308680646079*^9, 3.8493087044411983`*^9}, 3.8493114275131445`*^9, 
   3.849311546950085*^9, 3.849311780002988*^9, 3.849312225636722*^9, 
   3.8536219373482556`*^9, {3.853662129207361*^9, 3.8536621632144136`*^9}, 
   3.8536622276527834`*^9, {3.8536622621318517`*^9, 3.8536622746085877`*^9}, {
   3.853847995754919*^9, 3.853848012959443*^9}},
 CellLabel->
  "Out[118]=",ExpressionUUID->"116e87ea-e7aa-4a82-a494-2c5992578ae3"],

Cell[BoxData[
 RowBox[{"-", "0.5382642441655892`"}]], "Output",
 CellChangeTimes->{
  3.849295861761368*^9, {3.849295894356209*^9, 3.849295980231067*^9}, {
   3.849296011350252*^9, 3.8492960250830016`*^9}, 3.849296059857041*^9, 
   3.84929610410399*^9, 3.8492962390952187`*^9, 3.8492994372988477`*^9, {
   3.8492994754846907`*^9, 3.8492995054193125`*^9}, 3.849300084420362*^9, {
   3.849308680646079*^9, 3.8493087044411983`*^9}, 3.8493114275131445`*^9, 
   3.849311546950085*^9, 3.849311780002988*^9, 3.849312225636722*^9, 
   3.8536219373482556`*^9, {3.853662129207361*^9, 3.8536621632144136`*^9}, 
   3.8536622276527834`*^9, {3.8536622621318517`*^9, 3.8536622746085877`*^9}, {
   3.853847995754919*^9, 3.853848012961154*^9}},
 CellLabel->
  "Out[119]=",ExpressionUUID->"e8194870-9aa5-4469-b332-184b834a9101"]
}, Open  ]],

Cell["What is the optimal travel time?", "Text",
 CellChangeTimes->{{3.8493118225664563`*^9, 
  3.8493118310962095`*^9}},ExpressionUUID->"66636f4a-f52d-41bc-a217-\
e346f95707c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x\[CapitalSigma]", "=", 
   RowBox[{"{", 
    RowBox[{"xOpt", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{
    SubscriptBox["\[Gamma]", "F0"], "[", 
    RowBox[{"x\[CapitalSigma]", "-", "x0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t1", "=", 
   RowBox[{
    SubscriptBox["\[Gamma]", "F1"], "[", 
    RowBox[{"x1", "-", "x\[CapitalSigma]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"T", "=", 
  RowBox[{
   RowBox[{"t0", "+", "t1"}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.849311788741763*^9, 3.849311811274828*^9}, {
  3.8493118514107275`*^9, 3.8493118998385353`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f28f302f-aec4-48cc-9b27-5bc5170263b3"],

Cell[BoxData["2.018821638101307`"], "Output",
 CellChangeTimes->{
  3.8493118645213213`*^9, 3.849311900629912*^9, 3.849312019436804*^9, 
   3.853621940951809*^9, {3.8536621306967354`*^9, 3.8536621645552025`*^9}, 
   3.8536622276977935`*^9, {3.853662262172861*^9, 3.853662274649597*^9}, {
   3.853847995781385*^9, 3.853848012977708*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"dc5b7e0f-4c20-4865-8eab-160b009afcc8"]
}, Open  ]],

Cell["How does this fit in the previously computable solutions?", "Text",
 CellChangeTimes->{{3.8493118225664563`*^9, 3.8493118310962095`*^9}, {
  3.8493120261727705`*^9, 
  3.8493120435314975`*^9}},ExpressionUUID->"7cca6972-ae6a-4263-a095-\
7fe13042cf9b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"raytracePlt", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Arrowheads", "[", "Small", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"T", "=", "T"}], ",", "t", ",", "y0", ",", "v0", ",", 
              "\[Zeta]0", ",", "\[Zeta]2s", ",", "v2s"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"y0", "=", 
              RowBox[{"{", 
               RowBox[{"t0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"t", "=", 
              RowBox[{
               SubscriptBox["\[Gamma]", "F0"], "[", 
               RowBox[{"y0", "-", "x0"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"v0", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"y0", "-", "x0"}], ")"}], "/", "t"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"Choose", " ", "\[Zeta]0"}], " ", "\[Element]", " ", 
               RowBox[{
                SubscriptBox["N", "F0"], 
                RowBox[{"(", "v0", ")"}]}]}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"\[Zeta]0", "=", 
              RowBox[{
               SubscriptBox[
                OverscriptBox["\[ScriptCapitalN]", "^"], "F0"], "[", "v0", 
               "]"}]}], 
             RowBox[{"(*", " ", 
              RowBox[{
              "properly", " ", "scaled", " ", "normal", " ", "cone", " ", 
               "points"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "calculate", " ", "refracted", " ", "angles", " ", "with", " ", 
               "optimality", " ", "conditions"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"\[Zeta]2s", "=", 
              RowBox[{
               SubscriptBox["RefractedNormals", "F1"], "[", "\[Zeta]0", 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"v2s", "=", 
              RowBox[{"discretize", "/@", 
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{
                  SubscriptBox[
                   OverscriptBox["\[ScriptCapitalN]", "^"], 
                   SuperscriptBox["F1", "\[Degree]"]], "/@", "\[Zeta]2s"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"NonNegative", "@", 
                   RowBox[{"Last", "@", "#"}]}], "&"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"T", ">", 
                  RowBox[{
                   SubscriptBox["\[Gamma]", "F0"], "[", 
                   RowBox[{"y0", "-", "x0"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Black", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "]"}], ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"(", 
                    RowBox[{"y0", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"T", "-", 
                    RowBox[{
                    SubscriptBox["\[Gamma]", "F0"], "[", 
                    RowBox[{"y0", "-", "x0"}], "]"}]}], ")"}], "#"}]}], 
                    ")"}]}], "}"}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Lighter", "@", "Gray"}], ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", "y0"}], "}"}], "]"}], ",", "Black", 
                   ",", 
                   RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"x0", "+", 
                    RowBox[{"T", " ", "v0"}]}]}], "}"}], "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}], "&"}], "/@", "v2s"}]}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"t0", ",", 
            RowBox[{"-", "1"}], ",", ".5", ",", "0.05"}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"raytracePlt", ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "x\[CapitalSigma]", ",", "x1"}], "}"}], "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.824990385904606*^9, 3.8249903951860046`*^9}, 
   3.824990631341236*^9, {3.824990955569828*^9, 3.8249909585520973`*^9}, {
   3.8249910747871675`*^9, 3.824991076068889*^9}, {3.8249915841630373`*^9, 
   3.824991593984029*^9}, 3.824991650983486*^9, {3.825019300467416*^9, 
   3.8250193216420507`*^9}, 3.8250193852143087`*^9, {3.8250196114748774`*^9, 
   3.8250196127309103`*^9}, {3.8250684744315977`*^9, 
   3.8250685338259754`*^9}, {3.825068567074895*^9, 3.8250685845232935`*^9}, {
   3.825068637771127*^9, 3.825068849801468*^9}, {3.825068884700601*^9, 
   3.8250689069447613`*^9}, {3.825069045391356*^9, 3.825069073890939*^9}, {
   3.825069220100191*^9, 3.825069238217023*^9}, 3.825069503022312*^9, {
   3.8250695608051825`*^9, 3.8250695653396883`*^9}, {3.825069709350012*^9, 
   3.8250697180583987`*^9}, {3.8250771851725082`*^9, 3.825077189128981*^9}, 
   3.8258529152081137`*^9, {3.8258529481551056`*^9, 3.8258529517192707`*^9}, {
   3.849308775537877*^9, 3.8493088257618823`*^9}, {3.8493089306707635`*^9, 
   3.8493089919063053`*^9}, {3.8493115616962056`*^9, 
   3.8493115748808756`*^9}, {3.84931204999214*^9, 3.8493120862494745`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"a6dddd61-3c5b-4cd5-bd87-8a497466bab3"],

Cell[BoxData[
 GraphicsBox[{
   {Arrowheads[Small], 
    {GrayLevel[0], LineBox[{{-1, -1}, {-1., 0}}], 
     ArrowBox[{{-1., 0}, {-1., 2.0376432762026138`}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.95, 0}}], 
     ArrowBox[{{-0.95, 0}, {-0.7467394334338233, 2.0249690488103025`}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.9, 0}}], 
     ArrowBox[{{-0.9, 0}, {-0.49647895587541924`, 1.987110691807644}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.85, 0}}], 
     ArrowBox[{{-0.85, 0}, {-0.2521083352746948, 1.924534338663387}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.8, 0}}], 
     ArrowBox[{{-0.8, 0}, {-0.016306011208936266`, 1.837925317952246}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.75, 0}}], 
     ArrowBox[{{-0.75, 0}, {0.20854467133509624`, 1.7280409811607333`}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.7, 0}}], 
     ArrowBox[{{-0.7, 0}, {0.42041651617598563`, 1.5954738184205395`}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.6499999999999999, 0}}], 
     ArrowBox[{{-0.6499999999999999, 0}, {0.6176743423882312, 
       1.4402567697349589`}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.6, 0}}], 
     ArrowBox[{{-0.6, 0}, {0.799086134450976, 1.2611191991384243`}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.55, 0}}], 
     ArrowBox[{{-0.55, 0}, {0.9638123604153521, 1.053778583842317}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.5, 0}}], 
     ArrowBox[{{-0.5, 0}, {1.1113779337936016`, 0.8056889668967999}}]}, 
    {GrayLevel[0], LineBox[{{-1, -1}, {-0.44999999999999996`, 0}}], 
     ArrowBox[{{-0.44999999999999996`, 0}, {1.2416319993870302`, 
       0.4677179882238584}}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, 
   {RGBColor[1, 0, 0], 
    ArrowBox[NCache[{{-1, -1}, {
       Rational[-1, 6] (6 + (5967 - 216 519^Rational[1, 2])^Rational[1, 3] + 
           3 (221 + 8 519^Rational[1, 2])^Rational[1, 3])^Rational[1, 2] + 
        Rational[
          1, 2] (Rational[4, 3] + 
           Rational[-1, 9] (5967 - 216 519^Rational[1, 2])^Rational[1, 3] + 
           Rational[-1, 3] (221 + 8 519^Rational[1, 2])^Rational[1, 3] + 
           20 (6 + (5967 - 216 519^Rational[1, 2])^Rational[1, 3] + 
              3 (221 + 8 519^Rational[1, 2])^Rational[1, 3])^Rational[-1, 2])^
          Rational[1, 2], 0}, {1, 1}}, {{-1, -1}, {-0.5382642441655892, 0}, {
       1, 1}}]], PointBox[{1, 1}]}},
  Axes->True]], "Output",
 CellChangeTimes->{{3.8493120746473517`*^9, 3.8493120867190075`*^9}, 
   3.853621942473812*^9, {3.8536621308377666`*^9, 3.8536621646394224`*^9}, 
   3.8536622277358027`*^9, {3.8536622622058687`*^9, 3.853662274680604*^9}, {
   3.853847995805011*^9, 3.853848012997322*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"f0421a29-0cb4-4e04-bd55-ee14689ba718"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{3696, 2032},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.4 Inherited,
FrontEndVersion->"12.3 for Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"937ba30b-7d47-40ff-ae20-9ca07fd666a5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 782, 15, 63, "Input",ExpressionUUID->"652af6e2-203c-4b3d-89df-dfac0066658f",
 InitializationCell->True],
Cell[1343, 37, 166, 2, 71, "Input",ExpressionUUID->"834269a7-297f-4f1e-97a9-e893e87807e3"],
Cell[CellGroupData[{
Cell[1534, 43, 447, 6, 62, "Subsubsection",ExpressionUUID->"1fe5aae2-160b-4aeb-b068-486448326ff8"],
Cell[1984, 51, 81565, 1343, 547, "Text",ExpressionUUID->"4d429d8a-cedb-41da-b974-24b986ed511a"],
Cell[CellGroupData[{
Cell[83574, 1398, 1241, 29, 71, "Input",ExpressionUUID->"3861e854-3e2e-4b57-ad4e-9cfc166ac05f"],
Cell[84818, 1429, 620, 9, 47, "Output",ExpressionUUID->"50fc4cd4-6fa7-4d56-848a-a683071e63b1"],
Cell[85441, 1440, 620, 9, 47, "Output",ExpressionUUID->"26d825a3-af7e-4f7c-b83f-dde8161f97a3"]
}, Open  ]],
Cell[86076, 1452, 300, 8, 63, "Input",ExpressionUUID->"cb7e30fc-6238-4b07-858e-fcc601e9b188",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[86401, 1464, 4278, 104, 945, "Input",ExpressionUUID->"6e469a36-176a-4453-9a2e-168befc1c5b8"],
Cell[90682, 1570, 510, 10, 47, "Output",ExpressionUUID->"17634cfc-3f38-4eb8-9b31-0e2d9f7bf47c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91229, 1585, 1131, 22, 129, "Input",ExpressionUUID->"487336c5-c313-44b7-b515-9aa8518dff1c"],
Cell[92363, 1609, 5445, 121, 336, "Output",ExpressionUUID->"db22c9b0-7897-4bca-8661-d161cc8e0314"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97845, 1735, 958, 26, 71, "Input",ExpressionUUID->"d46897e3-6622-41cf-bb3f-c8c147685c72"],
Cell[98806, 1763, 6338, 164, 378, "Output",ExpressionUUID->"3e0be980-f0af-459b-9086-0227e3ea100d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105193, 1933, 436, 7, 62, "Subsubsection",ExpressionUUID->"dfdfd2d2-666c-402d-81c8-3894d397dc8a"],
Cell[105632, 1942, 151, 3, 48, "Text",ExpressionUUID->"38eaabc2-3339-49a0-b4fb-410e3fb7dcc5"],
Cell[105786, 1947, 636, 9, 41, "Input",ExpressionUUID->"7d973991-5669-4a75-aa7f-c04034c863f9"],
Cell[106425, 1958, 174, 3, 41, InheritFromParent,ExpressionUUID->"4f05ce69-139d-424f-982c-ef06c39c1e7d"],
Cell[106602, 1963, 175, 3, 41, InheritFromParent,ExpressionUUID->"f1a44181-5d52-4cd1-90db-088cd60a5a43"],
Cell[106780, 1968, 1664, 23, 41, "Input",ExpressionUUID->"d4d71d99-0016-4bab-961e-d99de20f4ef5"],
Cell[108447, 1993, 177, 3, 41, InheritFromParent,ExpressionUUID->"9b739e5d-28b0-40dc-9073-d3e35d8b83f7"],
Cell[108627, 1998, 629, 9, 41, "Input",ExpressionUUID->"fa4f87a7-e776-4c09-bc9c-b271c1557929"],
Cell[109259, 2009, 175, 3, 41, InheritFromParent,ExpressionUUID->"cd0537b5-9507-4e6e-b576-a1a061514db9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109471, 2017, 355, 5, 62, "Subsubsection",ExpressionUUID->"cbee2638-d041-4ce5-9dc2-901e5b885755"],
Cell[CellGroupData[{
Cell[109851, 2026, 1599, 42, 158, "Input",ExpressionUUID->"73f77bb2-4ecd-4f6f-a72e-8bdc56162060"],
Cell[111453, 2070, 787, 12, 47, "Output",ExpressionUUID->"f572af12-eb73-4f2f-9f0c-b66190255a22"],
Cell[112243, 2084, 787, 12, 47, "Output",ExpressionUUID->"daa8d020-7dee-426e-b388-1b551783cce8"]
}, Open  ]],
Cell[113045, 2099, 278, 6, 48, "Text",ExpressionUUID->"3705b4e6-4dc4-450c-a580-6d9d0d8ef551"],
Cell[CellGroupData[{
Cell[113348, 2109, 418, 11, 44, "Input",ExpressionUUID->"9d7af5d8-dcd6-482f-a5f5-a08a33dce3b9"],
Cell[113769, 2122, 1169, 34, 74, "Output",ExpressionUUID->"76182078-2d2b-40bd-8107-fd762d45e3ae"]
}, Open  ]],
Cell[114953, 2159, 679, 19, 48, "Text",ExpressionUUID->"c4ced621-236a-4cbe-9025-891bacc2cf1a"],
Cell[CellGroupData[{
Cell[115657, 2182, 2015, 51, 165, "Input",ExpressionUUID->"d3188dc7-401b-4b94-a0f8-e7cc670be46c"],
Cell[117675, 2235, 8065, 153, 336, "Output",ExpressionUUID->"16dfe1b2-c06d-43dd-85dd-9700ed4fb9f3"]
}, Open  ]],
Cell[125755, 2391, 301, 7, 48, "Text",ExpressionUUID->"6c00caa5-f4c0-4ae6-b729-949a89bda76e"],
Cell[CellGroupData[{
Cell[126081, 2402, 1373, 37, 129, "Input",ExpressionUUID->"5d8a1683-3e5e-40a4-9e41-dce12555a17e"],
Cell[127457, 2441, 1182, 29, 74, "Output",ExpressionUUID->"b1b70ff1-d596-40e4-9845-b81294e246ee"],
Cell[128642, 2472, 2386, 69, 85, "Output",ExpressionUUID->"97fa0a52-d62c-46bd-8b0a-7741da989ca1"],
Cell[131031, 2543, 2308, 68, 85, "Output",ExpressionUUID->"116e87ea-e7aa-4a82-a494-2c5992578ae3"],
Cell[133342, 2613, 810, 13, 47, "Output",ExpressionUUID->"e8194870-9aa5-4469-b332-184b834a9101"]
}, Open  ]],
Cell[134167, 2629, 178, 3, 48, "Text",ExpressionUUID->"66636f4a-f52d-41bc-a217-e346f95707c8"],
Cell[CellGroupData[{
Cell[134370, 2636, 786, 23, 129, "Input",ExpressionUUID->"f28f302f-aec4-48cc-9b27-5bc5170263b3"],
Cell[135159, 2661, 419, 7, 47, "Output",ExpressionUUID->"dc5b7e0f-4c20-4865-8eab-160b009afcc8"]
}, Open  ]],
Cell[135593, 2671, 256, 4, 48, "Text",ExpressionUUID->"7cca6972-ae6a-4263-a095-7fe13042cf9b"],
Cell[CellGroupData[{
Cell[135874, 2679, 6581, 147, 702, "Input",ExpressionUUID->"a6dddd61-3c5b-4cd5-bd87-8a497466bab3"],
Cell[142458, 2828, 2765, 48, 629, "Output",ExpressionUUID->"f0421a29-0cb4-4e04-bd55-ee14689ba718"]
}, Open  ]]
}, Open  ]]
}
]
*)

